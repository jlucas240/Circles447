{"version":3,"sources":["serviceWorker.js","components/mainPage.jsx","components/test_map.jsx","components/test.jsx","index.js"],"names":["Boolean","window","location","hostname","match","mainPage","state","distance","address","city","Supermarkets","Schools","Churches","communityCenter","Libraries","Cafe","danceStudio","Gyms","pool","playgrounds","Parks","resaltState","error","center","lat","lng","zoom","places","distancem","handleSupermarketsCheckboxChange","event","_this","setState","target","checked","handleSchoolsCheckboxChange","handleChurchesCheckboxChange","handleCommunityCheckboxChange","handleLibrariesCheckboxChange","handleCafeCheckboxChange","handleDanceCheckboxChange","handleGymsCheckboxChange","handleSwimmingCheckboxChange","handlePlaygroundsCheckboxChange","handleParksCheckboxChange","handleChangeAddress","e","value","handleChangeState","handleChangeStreet","street","handleChangeCity","handleDistanceChange","buttonClick","lol","API_key","hold","replace","fetch","then","res","json","result","status","console","log","results","geometry","errorCheck","JSON","stringify","i","length","add","place_id","vicinity","id","icon","name","type","concat","Object","toConsumableArray","errorButtonClick","optionClick","resultClick","mapPoint","react_default","a","createElement","mainPage_GMapReact","Zoom","Error","className","onClick","Resalts","style","flex","textAlign","color","map","place","mainPage_ResultElement","Options","dis","onChange","selected","class","min","max","checkboxStyle","backgroundColor","this","Component","GMapReact","props","_this2","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","show","forceUpdate","_this3","_this$props","width","height","lib_default","bootstrapURLKeys","key","hoverDistance","yesIWantToUseGoogleMapApiInternals","mainPage_Marker","text","info","React","Marker","show2","_this5","borderRadius","$hover","Fragment","src","mainPage_Informationwindow","Informationwindow","ResultElement","click","open","_this6","element","test_map","dist","google","initialCenter","onMapClicked","title","position","GoogleApiWrapper","apiKey","ReactDOM","render","src_components_mainPage","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yMAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,0HCg9BSC,0NA19BbC,MAAQ,CACNC,SAAU,GACVC,QAAS,GACTC,KAAM,GACNH,MAAO,GACPI,cAAc,EACdC,SAAS,EACTC,UAAU,EACVC,iBAAiB,EACjBC,WAAW,EACXC,MAAM,EACNC,aAAa,EACbC,MAAM,EACNC,MAAM,EACNC,aAAa,EACbC,OAAO,EACPC,aAAa,EACbC,OAAO,EACPC,OAAQ,CACNC,IAAK,QACLC,KAAM,QAERC,KAAM,EACNC,OAAQ,GACRC,UAAW,WAGbC,iCAAmC,SAAAC,GAAK,OACtCC,EAAKC,SAAS,CAAEtB,aAAcoB,EAAMG,OAAOC,aAC7CC,4BAA8B,SAAAL,GAAK,OACjCC,EAAKC,SAAS,CAAErB,QAASmB,EAAMG,OAAOC,aACxCE,6BAA+B,SAAAN,GAAK,OAClCC,EAAKC,SAAS,CAAEpB,SAAUkB,EAAMG,OAAOC,aACzCG,8BAAgC,SAAAP,GAAK,OACnCC,EAAKC,SAAS,CAAEnB,gBAAiBiB,EAAMG,OAAOC,aAChDI,8BAAgC,SAAAR,GAAK,OACnCC,EAAKC,SAAS,CAAElB,UAAWgB,EAAMG,OAAOC,aAC1CK,yBAA2B,SAAAT,GAAK,OAC9BC,EAAKC,SAAS,CAAEjB,KAAMe,EAAMG,OAAOC,aACrCM,0BAA4B,SAAAV,GAAK,OAC/BC,EAAKC,SAAS,CAAEhB,YAAac,EAAMG,OAAOC,aAC5CO,yBAA2B,SAAAX,GAAK,OAC9BC,EAAKC,SAAS,CAAEf,KAAMa,EAAMG,OAAOC,aACrCQ,6BAA+B,SAAAZ,GAAK,OAClCC,EAAKC,SAAS,CAAEd,KAAMY,EAAMG,OAAOC,aACrCS,gCAAkC,SAAAb,GAAK,OACrCC,EAAKC,SAAS,CAAEb,YAAaW,EAAMG,OAAOC,aAC5CU,0BAA4B,SAAAd,GAAK,OAC/BC,EAAKC,SAAS,CAAEZ,MAAOU,EAAMG,OAAOC,aAEtCW,oBAAsB,SAAAC,GACpBf,EAAKC,SAAS,CAAExB,QAASsC,EAAEb,OAAOc,WAEpCC,kBAAoB,SAAAF,GAClBf,EAAKC,SAAS,CAAE1B,MAAOwC,EAAEb,OAAOc,WAElCE,mBAAqB,SAAAH,GACnBf,EAAKC,SAAS,CAAEkB,OAAQJ,EAAEb,OAAOc,WAEnCI,iBAAmB,SAAAL,GACjBf,EAAKC,SAAS,CAAEvB,KAAMqC,EAAEb,OAAOc,WAEjCK,qBAAuB,SAAAN,GACrBf,EAAKC,SAAS,CAAEzB,SAAUuC,EAAEb,OAAOc,WAarCM,YAAc,WAEZ,IACIC,EADAC,EAAU,+CAEVC,EAA6B,QAAtBzB,EAAKzB,MAAMC,SAClBE,EAAOsB,EAAKzB,MAAMG,KAAKgD,QAAQ,KAAM,KACrCjD,EAAUuB,EAAKzB,MAAME,QAAQiD,QAAQ,KAAM,KAC/C1B,EAAKC,SAAS,CAAEJ,UAAW4B,IAE3BzB,EAAKC,SAAS,CACZL,OAAQ,KAGV+B,MACE,6DACElD,EACA,KACAC,EACA,KACAsB,EAAKzB,MAAMA,MACX,gDAEDqD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACC,SAAAG,GACwB,OAAlBA,EAAOC,QAKXC,QAAQC,IAAIH,GACZ/B,EAAKC,SAAS,CACZT,OAAQ,CACNC,IAAKsC,EAAOI,QAAQ,GAAGC,SAASjE,SAASsB,IACzCC,IAAKqC,EAAOI,QAAQ,GAAGC,SAASjE,SAASuB,QAR3CM,EAAKC,SAAS,CAAEV,OAAO,KAY3B,SAAAA,GACES,EAAKqC,gBAIqB,IAA5BrC,EAAKzB,MAAMI,cACbgD,MACE,yEACEW,KAAKC,UAAUvC,EAAKzB,MAAMiB,OAAOC,KACjC,IACA6C,KAAKC,UAAUvC,EAAKzB,MAAMiB,OAAOE,KACjC,WACA4C,KAAKC,UAAUd,GACf,uBACAD,GAEDI,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACC,SAAAG,GACE,IAAK,IAAIS,EAAI,EAAGA,EAAIT,EAAOI,QAAQM,OAAQD,IAAK,CAC9C,IAAIE,EACJf,MACE,8DACEI,EAAOI,QAAQK,GAAGG,SAClB,gDAEDf,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAMc,EAAMX,EAAOI,QAAQ,GAAGS,UACjCrB,EAAM,CACJsB,GAAId,EAAOI,QAAQK,GAAGG,SACtBlD,IAAKsC,EAAOI,QAAQK,GAAGJ,SAASjE,SAASsB,IACzCC,IAAKqC,EAAOI,QAAQK,GAAGJ,SAASjE,SAASuB,IACzCoD,KAAMf,EAAOI,QAAQK,GAAGM,KACxBC,KAAMhB,EAAOI,QAAQK,GAAGO,KACxBC,KAAM,cACNvE,QAASiE,GAEX1C,EAAKC,SAAS,CACZL,OAAM,GAAAqD,OAAAC,OAAAC,EAAA,EAAAD,CAAMlD,EAAKzB,MAAMqB,QAAjB,CAAyB2B,MAGjCU,QAAQC,IAAIH,KAGhB,SAAAxC,GACES,EAAKC,SAAS,CACZwB,KAAM,aAKW,IAAvBzB,EAAKzB,MAAMK,SACb+C,MACE,yEACEW,KAAKC,UAAUvC,EAAKzB,MAAMiB,OAAOC,KACjC,IACA6C,KAAKC,UAAUvC,EAAKzB,MAAMiB,OAAOE,KACjC,WACA4C,KAAKC,UAAUd,GACf,eACAD,GAEDI,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACC,SAAAG,GACE,IAAK,IAAIS,EAAI,EAAGA,EAAIT,EAAOI,QAAQM,OAAQD,IAAK,CAC9C,IAAIE,EACJf,MACE,8DACEI,EAAOI,QAAQK,GAAGG,SAClB,gDAEDf,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAMc,EAAMX,EAAOI,QAAQ,GAAGS,UACjCrB,EAAM,CACJsB,GAAId,EAAOI,QAAQK,GAAGG,SACtBlD,IAAKsC,EAAOI,QAAQK,GAAGJ,SAASjE,SAASsB,IACzCC,IAAKqC,EAAOI,QAAQK,GAAGJ,SAASjE,SAASuB,IACzCoD,KAAMf,EAAOI,QAAQK,GAAGM,KACxBC,KAAMhB,EAAOI,QAAQK,GAAGO,KACxBC,KAAM,SACNvE,QAASiE,GAEX1C,EAAKC,SAAS,CACZL,OAAM,GAAAqD,OAAAC,OAAAC,EAAA,EAAAD,CAAMlD,EAAKzB,MAAMqB,QAAjB,CAAyB2B,MAGjCU,QAAQC,IAAIX,KAGhB,SAAAhC,GACES,EAAKC,SAAS,CACZwB,KAAM,aAKY,IAAxBzB,EAAKzB,MAAMM,UACb8C,MACE,yEACEW,KAAKC,UAAUvC,EAAKzB,MAAMiB,OAAOC,KACjC,IACA6C,KAAKC,UAAUvC,EAAKzB,MAAMiB,OAAOE,KACjC,WACA4C,KAAKC,UAAUd,GACf,eACAD,GAEDI,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACC,SAAAG,GACE,IAAK,IAAIS,EAAI,EAAGA,EAAIT,EAAOI,QAAQM,OAAQD,IAAK,CAC9C,IAAIE,EACJf,MACE,8DACEI,EAAOI,QAAQK,GAAGG,SAClB,gDAEDf,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAMc,EAAMX,EAAOI,QAAQ,GAAGS,UACjCrB,EAAM,CACJsB,GAAId,EAAOI,QAAQK,GAAGG,SACtBlD,IAAKsC,EAAOI,QAAQK,GAAGJ,SAASjE,SAASsB,IACzCC,IAAKqC,EAAOI,QAAQK,GAAGJ,SAASjE,SAASuB,IACzCoD,KAAMf,EAAOI,QAAQK,GAAGM,KACxBC,KAAMhB,EAAOI,QAAQK,GAAGO,KACxBC,KAAM,WACNvE,QAASiE,GAEX1C,EAAKC,SAAS,CACZL,OAAM,GAAAqD,OAAAC,OAAAC,EAAA,EAAAD,CAAMlD,EAAKzB,MAAMqB,QAAjB,CAAyB2B,MAGjCU,QAAQC,IAAIX,KAGhB,SAAAhC,GACES,EAAKC,SAAS,CACZwB,KAAM,aAKmB,IAA/BzB,EAAKzB,MAAMO,iBACb6C,MACE,yEACEW,KAAKC,UAAUvC,EAAKzB,MAAMiB,OAAOC,KACjC,IACA6C,KAAKC,UAAUvC,EAAKzB,MAAMiB,OAAOE,KACjC,WACA4C,KAAKC,UAAUd,GACf,4BACAD,GAEDI,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACC,SAAAG,GACE,IAAK,IAAIS,EAAI,EAAGA,EAAIT,EAAOI,QAAQM,OAAQD,IAAK,CAC9C,IAAIE,EACJf,MACE,8DACEI,EAAOI,QAAQK,GAAGG,SAClB,gDAEDf,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAMc,EAAMX,EAAOI,QAAQ,GAAGS,UACjCrB,EAAM,CACJsB,GAAId,EAAOI,QAAQK,GAAGG,SACtBlD,IAAKsC,EAAOI,QAAQK,GAAGJ,SAASjE,SAASsB,IACzCC,IAAKqC,EAAOI,QAAQK,GAAGJ,SAASjE,SAASuB,IACzCoD,KAAMf,EAAOI,QAAQK,GAAGM,KACxBC,KAAMhB,EAAOI,QAAQK,GAAGO,KACxBC,KAAM,mBACNvE,QAASiE,GAEX1C,EAAKC,SAAS,CACZL,OAAM,GAAAqD,OAAAC,OAAAC,EAAA,EAAAD,CAAMlD,EAAKzB,MAAMqB,QAAjB,CAAyB2B,MAGjCU,QAAQC,IAAIX,KAGhB,SAAAhC,GACES,EAAKC,SAAS,CACZwB,KAAM,aAKe,IAA3BzB,EAAKzB,MAAMU,aACb0C,MACE,yEACEW,KAAKC,UAAUvC,EAAKzB,MAAMiB,OAAOC,KACjC,IACA6C,KAAKC,UAAUvC,EAAKzB,MAAMiB,OAAOE,KACjC,WACA4C,KAAKC,UAAUd,GACf,wBACAD,GAEDI,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACC,SAAAG,GACE,IAAK,IAAIS,EAAI,EAAGA,EAAIT,EAAOI,QAAQM,OAAQD,IAAK,CAC9C,IAAIE,EACJf,MACE,8DACEI,EAAOI,QAAQK,GAAGG,SAClB,gDAEDf,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAMc,EAAMX,EAAOI,QAAQ,GAAGS,UACjCrB,EAAM,CACJsB,GAAId,EAAOI,QAAQK,GAAGG,SACtBlD,IAAKsC,EAAOI,QAAQK,GAAGJ,SAASjE,SAASsB,IACzCC,IAAKqC,EAAOI,QAAQK,GAAGJ,SAASjE,SAASuB,IACzCoD,KAAMf,EAAOI,QAAQK,GAAGM,KACxBC,KAAMhB,EAAOI,QAAQK,GAAGO,KACxBC,KAAM,eACNvE,QAASiE,GAEX1C,EAAKC,SAAS,CACZL,OAAM,GAAAqD,OAAAC,OAAAC,EAAA,EAAAD,CAAMlD,EAAKzB,MAAMqB,QAAjB,CAAyB2B,MAGjCU,QAAQC,IAAIX,KAGhB,SAAAhC,GACES,EAAKC,SAAS,CACZwB,KAAM,aAMQ,IAApBzB,EAAKzB,MAAMS,MACb2C,MACE,yEACEW,KAAKC,UAAUvC,EAAKzB,MAAMiB,OAAOC,KACjC,IACA6C,KAAKC,UAAUvC,EAAKzB,MAAMiB,OAAOE,KACjC,WACA4C,KAAKC,UAAUd,GACf,aACAD,GAEDI,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACC,SAAAG,GACE,IAAK,IAAIS,EAAI,EAAGA,EAAIT,EAAOI,QAAQM,OAAQD,IAAK,CAC9C,IAAIE,EACJf,MACE,8DACEI,EAAOI,QAAQK,GAAGG,SAClB,gDAEDf,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAMc,EAAMX,EAAOI,QAAQ,GAAGS,UACjCrB,EAAM,CACJsB,GAAId,EAAOI,QAAQK,GAAGG,SACtBlD,IAAKsC,EAAOI,QAAQK,GAAGJ,SAASjE,SAASsB,IACzCC,IAAKqC,EAAOI,QAAQK,GAAGJ,SAASjE,SAASuB,IACzCoD,KAAMf,EAAOI,QAAQK,GAAGM,KACxBC,KAAMhB,EAAOI,QAAQK,GAAGO,KACxBC,KAAM,OACNvE,QAASiE,GAEX1C,EAAKC,SAAS,CACZL,OAAM,GAAAqD,OAAAC,OAAAC,EAAA,EAAAD,CAAMlD,EAAKzB,MAAMqB,QAAjB,CAAyB2B,MAGjCU,QAAQC,IAAIX,KAGhB,SAAAhC,GACES,EAAKC,SAAS,CACZwB,KAAM,aAMa,IAAzBzB,EAAKzB,MAAMQ,WACb4C,MACE,yEACEW,KAAKC,UAAUvC,EAAKzB,MAAMiB,OAAOC,KACjC,IACA6C,KAAKC,UAAUvC,EAAKzB,MAAMiB,OAAOE,KACjC,WACA4C,KAAKC,UAAUd,GACf,gBACAD,GAEDI,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACC,SAAAG,GACE,IAAK,IAAIS,EAAI,EAAGA,EAAIT,EAAOI,QAAQM,OAAQD,IAAK,CAC9C,IAAIE,EACJf,MACE,8DACEI,EAAOI,QAAQK,GAAGG,SAClB,gDAEDf,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAMc,EAAMX,EAAOI,QAAQ,GAAGS,UACjCrB,EAAM,CACJsB,GAAId,EAAOI,QAAQK,GAAGG,SACtBlD,IAAKsC,EAAOI,QAAQK,GAAGJ,SAASjE,SAASsB,IACzCC,IAAKqC,EAAOI,QAAQK,GAAGJ,SAASjE,SAASuB,IACzCoD,KAAMf,EAAOI,QAAQK,GAAGM,KACxBC,KAAMhB,EAAOI,QAAQK,GAAGO,KACxBC,KAAM,UACNvE,QAASiE,GAEX1C,EAAKC,SAAS,CACZL,OAAM,GAAAqD,OAAAC,OAAAC,EAAA,EAAAD,CAAMlD,EAAKzB,MAAMqB,QAAjB,CAAyB2B,MAGjCU,QAAQC,IAAIX,KAGhB,SAAAhC,GACE0C,QAAQC,IAAI3C,GACZS,EAAKC,SAAS,CACZwB,KAAM,aAMQ,IAApBzB,EAAKzB,MAAMW,MACbyC,MACE,yEACEW,KAAKC,UAAUvC,EAAKzB,MAAMiB,OAAOC,KACjC,IACA6C,KAAKC,UAAUvC,EAAKzB,MAAMiB,OAAOE,KACjC,WACA4C,KAAKC,UAAUd,GACf,YACAD,GAEDI,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACC,SAAAG,GACE,IAAK,IAAIS,EAAI,EAAGA,EAAIT,EAAOI,QAAQM,OAAQD,IAAK,CAC9C,IAAIE,EACJf,MACE,8DACEI,EAAOI,QAAQK,GAAGG,SAClB,gDAEDf,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAMc,EAAMX,EAAOI,QAAQ,GAAGS,UACjCrB,EAAM,CACJsB,GAAId,EAAOI,QAAQK,GAAGG,SACtBlD,IAAKsC,EAAOI,QAAQK,GAAGJ,SAASjE,SAASsB,IACzCC,IAAKqC,EAAOI,QAAQK,GAAGJ,SAASjE,SAASuB,IACzCoD,KAAMf,EAAOI,QAAQK,GAAGM,KACxBC,KAAMhB,EAAOI,QAAQK,GAAGO,KACxBC,KAAM,OACNvE,QAASiE,GAEX1C,EAAKC,SAAS,CACZL,OAAM,GAAAqD,OAAAC,OAAAC,EAAA,EAAAD,CAAMlD,EAAKzB,MAAMqB,QAAjB,CAAyB2B,MAGjCU,QAAQC,IAAIX,KAGhB,SAAAhC,GACE0C,QAAQC,IAAI3C,GACZS,EAAKC,SAAS,CACZwB,KAAM,aAMQ,IAApBzB,EAAKzB,MAAMY,MACbwC,MACE,yEACEW,KAAKC,UAAUvC,EAAKzB,MAAMiB,OAAOC,KACjC,IACA6C,KAAKC,UAAUvC,EAAKzB,MAAMiB,OAAOE,KACjC,WACA4C,KAAKC,UAAUd,GACf,gBACAD,GAEDI,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACC,SAAAG,GACE,IAAK,IAAIS,EAAI,EAAGA,EAAIT,EAAOI,QAAQM,OAAQD,IAAK,CAC9C,IAAIE,EACJf,MACE,8DACEI,EAAOI,QAAQK,GAAGG,SAClB,gDAEDf,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAMc,EAAMX,EAAOI,QAAQ,GAAGS,UACjCrB,EAAM,CACJsB,GAAId,EAAOI,QAAQK,GAAGG,SACtBlD,IAAKsC,EAAOI,QAAQK,GAAGJ,SAASjE,SAASsB,IACzCC,IAAKqC,EAAOI,QAAQK,GAAGJ,SAASjE,SAASuB,IACzCoD,KAAMf,EAAOI,QAAQK,GAAGM,KACxBC,KAAMhB,EAAOI,QAAQK,GAAGO,KACxBC,KAAM,OACNvE,QAASiE,GAEX1C,EAAKC,SAAS,CACZL,OAAM,GAAAqD,OAAAC,OAAAC,EAAA,EAAAD,CAAMlD,EAAKzB,MAAMqB,QAAjB,CAAyB2B,MAGjCU,QAAQC,IAAIX,KAGhB,SAAAhC,GACE0C,QAAQC,IAAI3C,GACZS,EAAKC,SAAS,CACZwB,KAAM,aAMe,IAA3BzB,EAAKzB,MAAMa,aACbuC,MACE,yEACEW,KAAKC,UAAUvC,EAAKzB,MAAMiB,OAAOC,KACjC,IACA6C,KAAKC,UAAUvC,EAAKzB,MAAMiB,OAAOE,KACjC,WACA4C,KAAKC,UAAUd,GACf,sBACAD,GAEDI,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACC,SAAAG,GACE,IAAK,IAAIS,EAAI,EAAGA,EAAIT,EAAOI,QAAQM,OAAQD,IAAK,CAC9C,IAAIE,EACJf,MACE,8DACEI,EAAOI,QAAQK,GAAGG,SAClB,gDAEDf,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAMc,EAAMX,EAAOI,QAAQ,GAAGS,UACjCrB,EAAM,CACJsB,GAAId,EAAOI,QAAQK,GAAGG,SACtBlD,IAAKsC,EAAOI,QAAQK,GAAGJ,SAASjE,SAASsB,IACzCC,IAAKqC,EAAOI,QAAQK,GAAGJ,SAASjE,SAASuB,IACzCoD,KAAMf,EAAOI,QAAQK,GAAGM,KACxBC,KAAMhB,EAAOI,QAAQK,GAAGO,KACxBC,KAAM,aACNvE,QAASiE,GAEX1C,EAAKC,SAAS,CACZL,OAAM,GAAAqD,OAAAC,OAAAC,EAAA,EAAAD,CAAMlD,EAAKzB,MAAMqB,QAAjB,CAAyB2B,MAGjCU,QAAQC,IAAIX,KAGhB,SAAAhC,GACE0C,QAAQC,IAAI3C,GACZS,EAAKC,SAAS,CACZwB,KAAM,aAMS,IAArBzB,EAAKzB,MAAMc,OACbsC,MACE,yEACEW,KAAKC,UAAUvC,EAAKzB,MAAMiB,OAAOC,KACjC,IACA6C,KAAKC,UAAUvC,EAAKzB,MAAMiB,OAAOE,KACjC,WACA4C,KAAKC,UAAUd,GACf,aACAD,GAEDI,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACC,SAAAG,GACE,IAAK,IAAIS,EAAI,EAAGA,EAAIT,EAAOI,QAAQM,OAAQD,IAAK,CAC9C,IAAIE,EACJf,MACE,8DACEI,EAAOI,QAAQK,GAAGG,SAClB,gDAEDf,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAMc,EAAMX,EAAOI,QAAQ,GAAGS,UACjCrB,EAAM,CACJsB,GAAId,EAAOI,QAAQK,GAAGG,SACtBlD,IAAKsC,EAAOI,QAAQK,GAAGJ,SAASjE,SAASsB,IACzCC,IAAKqC,EAAOI,QAAQK,GAAGJ,SAASjE,SAASuB,IACzCoD,KAAMf,EAAOI,QAAQK,GAAGM,KACxBC,KAAMhB,EAAOI,QAAQK,GAAGO,KACxBC,KAAM,OACNvE,QAASiE,GAEX1C,EAAKC,SAAS,CACZL,OAAM,GAAAqD,OAAAC,OAAAC,EAAA,EAAAD,CAAMlD,EAAKzB,MAAMqB,QAAjB,CAAyB2B,MAGjCU,QAAQC,IAAIX,KAGhB,SAAAhC,GACE0C,QAAQC,IAAI3C,GACZS,EAAKC,SAAS,CACZwB,KAAM,YAgBhBzB,EAAKC,SAAS,CAAEX,aAAa,IAE7BU,EAAKC,SAAS,CACZtB,cAAc,EACdC,SAAS,EACTC,UAAU,EACVC,iBAAiB,EACjBC,WAAW,EACXC,MAAM,EACNC,aAAa,EACbC,MAAM,EACNC,MAAM,EACNC,aAAa,EACbC,OAAO,OAIXgD,WAAa,WACgB,KAAvBrC,EAAKzB,MAAME,QACbuB,EAAKC,SAAS,CAAEV,OAAO,IACO,KAArBS,EAAKzB,MAAMA,OAAqC,eAArByB,EAAKzB,MAAMA,MAC/CyB,EAAKC,SAAS,CAAEV,OAAO,IACM,KAApBS,EAAKzB,MAAMG,MACpBsB,EAAKC,SAAS,CAAEV,OAAO,OAI3B6D,iBAAmB,WACjBpD,EAAKC,SAAS,CAAEV,OAAO,IACvBS,EAAKC,SAAS,CAAEX,aAAa,OAG/B+D,YAAc,YACmB,IAA3BrD,EAAKzB,MAAMe,YACbU,EAAKC,SAAS,CAAEX,aAAa,IAE7BU,EAAKC,SAAS,CAAEX,aAAa,OAIjCgE,YAAc,WACRtD,EAAKzB,MAAMe,YACbU,EAAKC,SAAS,CAAEX,aAAa,OAMjCiE,SAAW,WACT,OACEC,EAAAC,EAAAC,cAACC,EAAD,CACEnE,OAAQQ,EAAKzB,MAAMiB,OACnBoE,KAAM5D,EAAKzB,MAAMoB,KACjBC,OAAQI,EAAKzB,MAAMqB,OACnBpB,SAAUwB,EAAKzB,MAAMC,cAK3BqF,MAAQ,WACM7D,EAAKzB,MAAMqB,OACvB,OACE4D,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SAAf,SACQN,EAAAC,EAAAC,cAAA,WADR,qEAEqE,IACnEF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,UAAQK,QAAS/D,EAAKoD,kBAAtB,YAKNY,QAAU,WACR,OACER,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OAAOC,QAAS,kBAAM/D,EAAKqD,YAAY,MACpDG,EAAAC,EAAAC,cAAA,QAAMO,MAAO,CAAEC,KAAM,IACnBV,EAAAC,EAAAC,cAAA,QAAMO,MAAO,CAAEE,UAAW,UACxBX,EAAAC,EAAAC,cAAA,QAAMO,MAAO,CAAEG,MAAO,UAAtB,aAGJZ,EAAAC,EAAAC,cAAA,YAEFF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SAASC,QAAS,kBAAM/D,EAAKsD,YAAY,MACtDE,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,QAAMO,MAAO,CAAEC,KAAM,IACnBV,EAAAC,EAAAC,cAAA,QAAMO,MAAO,CAAEE,UAAW,UACxBX,EAAAC,EAAAC,cAAA,QAAMO,MAAO,CAAEG,MAAO,UAAtB,aAGJZ,EAAAC,EAAAC,cAAA,aAGJF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACZ9D,EAAKzB,MAAMqB,OAAOyE,IAAI,SAAAC,GACrB,OACEd,EAAAC,EAAAC,cAACa,EAAD,CACET,UAAU,IACVf,KAAMuB,EAAMvB,KACZC,KAAMsB,EAAMtB,KACZvE,QAAS6F,EAAM7F,QACfoE,GAAIyB,EAAMzB,GACVpD,IAAK6E,EAAM7E,IACXC,IAAK4E,EAAM5E,aASzB8E,QAAU,WACR,IAAIC,EAAMzE,EAAKzB,MAAMC,SACjBiD,EAAOzB,EAAKzB,MAAMQ,UACtB,OACEyE,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OAAOC,QAAS,kBAAM/D,EAAKqD,YAAY,MACpDG,EAAAC,EAAAC,cAAA,QAAMO,MAAO,CAAEC,KAAM,IACnBV,EAAAC,EAAAC,cAAA,QAAMO,MAAO,CAAEE,UAAW,UACxBX,EAAAC,EAAAC,cAAA,QAAMO,MAAO,CAAEG,MAAO,UAAtB,aAGJZ,EAAAC,EAAAC,cAAA,YAPJ,iBASiBjC,EACf+B,EAAAC,EAAAC,cAAA,WAVF,sBAYEF,EAAAC,EAAAC,cAAA,SACEV,KAAK,OACLD,KAAK,QACL/B,MAAOhB,EAAKzB,MAAME,QAClBiG,SAAU1E,EAAKc,sBAEjB0C,EAAAC,EAAAC,cAAA,WAlBF,SAoBEF,EAAAC,EAAAC,cAAA,UAAQ1C,MAAOhB,EAAKzB,MAAMA,MAAOmG,SAAU1E,EAAKiB,mBAC9CuC,EAAAC,EAAAC,cAAA,UAAQiB,UAAQ,GAAhB,cACAnB,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,WACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,UACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,WACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,YACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,cACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,YACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,eACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,YACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,wBACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,WACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,WACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,UACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,SACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,YACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,WACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,QACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,UACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,YACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,aACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,SACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,YACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,iBACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,YACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,aACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,eACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,YACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,WACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,YACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,UACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,iBACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,cACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,cACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,YACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,kBACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,gBACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,QACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,YACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,UACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,gBACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,gBACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,kBACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,gBACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,aACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,SACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,QACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,WACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,YACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,cACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,iBACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,aACAwC,EAAAC,EAAAC,cAAA,UAAQ1C,MAAM,MAAd,YAxEJ,QA2EEwC,EAAAC,EAAAC,cAAA,SACEV,KAAK,OACLD,KAAK,QACL/B,MAAOhB,EAAKzB,MAAMG,KAClBgG,SAAU1E,EAAKoB,mBAEjBoC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKkB,MAAM,kBAAX,YAEEpB,EAAAC,EAAAC,cAAA,SACEV,KAAK,QACL6B,IAAI,IACJC,IAAI,KACJ9D,MAAOhB,EAAKzB,MAAMC,SAClBkG,SAAU1E,EAAKqB,qBACfuD,MAAM,SACN/B,GAAG,YAELW,EAAAC,EAAAC,cAAA,WAXF,2BAY2Be,EAZ3B,UAlFF,YAgGWjB,EAAAC,EAAAC,cAAA,WACTF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEV,KAAK,WACLiB,MAAOjE,EAAK+E,cACZ5E,QAASH,EAAKzB,MAAM4B,QACpBuE,SAAU1E,EAAKF,mCALnB,eAQE0D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACEV,KAAK,WACL7C,QAASH,EAAKzB,MAAM4B,QACpBuE,SAAU1E,EAAKI,8BAZnB,UAeEoD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACEV,KAAK,WACL7C,QAASH,EAAKzB,MAAM4B,QACpBuE,SAAU1E,EAAKK,+BAnBnB,WAsBEmD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACEV,KAAK,WACL7C,QAASH,EAAKzB,MAAM4B,QACpBuE,SAAU1E,EAAKM,gCA1BnB,sBA6BEkD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACEV,KAAK,WACL7C,QAASH,EAAKzB,MAAM4B,QACpBuE,SAAU1E,EAAKO,gCAjCnB,YAoCEiD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACEV,KAAK,WACL7C,QAASH,EAAKzB,MAAM4B,QACpBuE,SAAU1E,EAAKQ,2BAxCnB,OA2CEgD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACEV,KAAK,WACL7C,QAASH,EAAKzB,MAAM4B,QACpBuE,SAAU1E,EAAKS,4BA/CnB,gBAkDE+C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACEV,KAAK,WACL7C,QAASH,EAAKzB,MAAM4B,QACpBuE,SAAU1E,EAAKU,2BAtDnB,OAyDE8C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACEV,KAAK,WACL7C,QAASH,EAAKzB,MAAM4B,QACpBuE,SAAU1E,EAAKW,+BA7DnB,iBAgEE6C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACEV,KAAK,WACL7C,QAASH,EAAKzB,MAAM4B,QACpBuE,SAAU1E,EAAKY,kCApEnB,cAuEE4C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACEV,KAAK,WACL7C,QAASH,EAAKzB,MAAM4B,QACpBuE,SAAU1E,EAAKa,4BA3EnB,QA8EE2C,EAAAC,EAAAC,cAAA,YAEFF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEV,KAAK,SACLe,QAAS,kBAAM/D,EAAKsB,YAAY,KAChC2C,MAAO,CACLe,gBAAiB,mBAJrB,UASAxB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SAASC,QAAS,kBAAM/D,EAAKsD,YAAY,MACtDE,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACbN,EAAAC,EAAAC,cAAA,QAAMO,MAAO,CAAEC,KAAM,IACnBV,EAAAC,EAAAC,cAAA,QAAMO,MAAO,CAAEE,UAAW,UACxBX,EAAAC,EAAAC,cAAA,QAAMO,MAAO,CAAEG,MAAO,UAAtB,aAGJZ,EAAAC,EAAAC,cAAA,wFASV,OACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACbN,EAAAC,EAAAC,cAAA,QAAMO,MAAO,CAAEG,MAAO,UAAtB,2BAEDa,KAAK1G,MAAMgB,MACViE,EAAAC,EAAAC,cAAAuB,KAAMpB,MAAN,MAEAL,EAAAC,EAAAC,cAAA,QAAMI,UAAU,QACdN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAAuB,KAAM1B,SAAN,OAED0B,KAAK1G,MAAMe,YAAckE,EAAAC,EAAAC,cAAAuB,KAAMjB,QAAN,MAAmBR,EAAAC,EAAAC,cAAAuB,KAAMT,QAAN,eAp9BlCU,cA+9BjBC,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAnC,OAAAoC,EAAA,EAAApC,CAAA+B,KAAAE,IACjBE,EAAAnC,OAAAqC,EAAA,EAAArC,CAAA+B,KAAA/B,OAAAsC,EAAA,EAAAtC,CAAAiC,GAAAM,KAAAR,KAAMG,KACD7G,MAAQ,CACXiB,OAAQ,CACNC,IAAK,EACLC,IAAK,GAEPC,KAAM,GACN+F,MAAM,EACNlH,SAAU,GATK6G,4EAejBJ,KAAKU,+CAKE,IAAAC,EAAAX,KAAAY,EAC0BZ,KAAKG,MAA9B5F,EADDqG,EACCrG,OAAQoE,EADTiC,EACSjC,KAAMhE,EADfiG,EACejG,OAEtB,OACE4D,EAAAC,EAAAC,cAAA,OAAKO,MAAO,CAAE6B,MAAO,OAAQC,OAAQ,SACnCvC,EAAAC,EAAAC,cAACsC,EAAAvC,EAAD,CACEwC,iBAAkB,CAAEC,IAAK,CA7BZ,iDA8Bb1G,OAAQA,EACRG,KAAMiE,EACNuC,cAAe,GACfC,oCAAoC,GAwBnCxG,EAAOyE,IAAI,SAAAC,GACV,OACEd,EAAAC,EAAAC,cAAC2C,EAAD,CACEC,KAAMhC,EAAMzB,GACZpD,IAAK6E,EAAM7E,IACXC,IAAK4E,EAAM5E,IACXgG,KAAME,EAAKrH,MAAMmH,KACjBa,KAAMjC,EAAMvB,KACZD,KAAMwB,EAAMxB,kBA/DJ0D,IAAMtB,WAyExBuB,6MACJlI,MAAQ,CACNmH,MAAM,EACNgB,OAAO,2EAGA,IAAAC,EAAA1B,KACHyB,GAAQ,EACRzC,EAAQ,CACV2C,aAAc,GACdb,OAAQ,GACRD,MAAO,IAYT,OAT0B,IAAtBb,KAAKG,MAAMyB,SACb5C,EAAQ,CACN2C,aAAc,GACdb,OAAQ,GACRD,MAAO,IAETY,GAAQ,GAIRlD,EAAAC,EAAAC,cAACF,EAAAC,EAAMqD,SAAP,KACEtD,EAAAC,EAAAC,cAAA,OACEO,MAAOA,EACPF,QAAS,YACiB,IAApB4C,EAAKpI,MAAMmH,KACbiB,EAAK1G,SAAS,CAAEyF,MAAM,IAEtBiB,EAAK1G,SAAS,CAAEyF,MAAM,MAIL,OAApBT,KAAKG,MAAMtC,KACVU,EAAAC,EAAAC,cAAA,OACEqD,IAAK9B,KAAKG,MAAMtC,KAChBmB,MAAO,CAAE6B,MAAO,OAAQC,OAAQ,UAGlCvC,EAAAC,EAAAC,cAAA,OACEqD,IAAK,oDACL9C,MAAO,CAAE6B,MAAO,OAAQC,OAAQ,WAKrCd,KAAK1G,MAAMmH,KACVlC,EAAAC,EAAAC,cAACsD,EAAD,CACElD,UAAU,KACVyC,KAAMtB,KAAKG,MAAMmB,KACjBvD,KAAMiC,KAAKG,MAAMpC,OAGnBQ,EAAAC,EAAAC,cAAA,YAEDgD,EACClD,EAAAC,EAAAC,cAACsD,EAAD,CACElD,UAAU,KACVyC,KAAMtB,KAAKG,MAAMmB,KACjBvD,KAAMiC,KAAKG,MAAMpC,OAGnBQ,EAAAC,EAAAC,cAAA,oBAhEW8C,IAAMtB,WAuErB+B,mLAEF,OACEzD,EAAAC,EAAAC,cAAA,WACGuB,KAAKG,MAAMmB,KACZ/C,EAAAC,EAAAC,cAAA,WACCuB,KAAKG,MAAMpC,aANYwD,IAAMtB,WAYhCgC,6MACJC,MAAQ,WACNjJ,OAAOkJ,KACL,mDACEC,EAAKjC,MAAM3F,IACX,IACA4H,EAAKjC,MAAM1F,IACX,mBACA2H,EAAKjC,MAAMvC,OAIjByE,QAAU,WACR,OACE9D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBAAY2D,EAAKjC,MAAMrC,MACvBS,EAAAC,EAAAC,cAAA,oBACS2D,EAAKjC,MAAMpC,KAClBQ,EAAAC,EAAAC,cAAA,YAGFF,EAAAC,EAAAC,cAAA,UACEK,QAAS,WACP7F,OAAOkJ,KACL,mDACEC,EAAKjC,MAAM3F,IACX,IACA4H,EAAKjC,MAAM1F,IACX,mBACA2H,EAAKjC,MAAMvC,MARnB,uFAmBJ,OACEW,EAAAC,EAAAC,cAAA,OAAKI,UAAU,KACbN,EAAAC,EAAAC,cAAAuB,KAAMqC,QAAN,cA1CoBd,IAAMtB,mBC1nC5BqC,cACJ,SAAAA,EAAYnC,GAAO,IAAApF,EAAA,OAAAkD,OAAAoC,EAAA,EAAApC,CAAA+B,KAAAsC,IACjBvH,EAAAkD,OAAAqC,EAAA,EAAArC,CAAA+B,KAAA/B,OAAAsC,EAAA,EAAAtC,CAAAqE,GAAA9B,KAAAR,KAAMG,KACD7G,MAAQ,CACXiB,OAAQQ,EAAKoF,MAAM5F,OACnBG,KAAMK,EAAKoF,MAAMzF,KACjB+F,MAAM,EACNlH,SAAU,GANKwB,wEAejB,OACEwD,EAAAC,EAAAC,cAAC8D,EAAA,IAAD,CACEC,OAAQxC,KAAKG,MAAMqC,OACnBxD,MAAO,CAAE6B,MAAO,OAAQC,OAAQ,QAChC2B,cAAezC,KAAKG,MAAM5F,OAC1BG,KAAMsF,KAAKG,MAAMzF,KACjBoE,QAASkB,KAAK0C,cAEdnE,EAAAC,EAAAC,cAAC8D,EAAA,OAAD,CACEI,MAAO,+CACP7E,KAAM,OACN8E,SAAU5C,KAAKG,MAAM5F,SAGtByF,KAAKG,MAAMxF,OAAOyE,IAAI,SAAAC,GACrB,OACEd,EAAAC,EAAAC,cAAC8D,EAAA,OAAD,CACEI,MAAO,+CACP7E,KAAM,OACN8E,SAAU,CAAEpI,IAAK6E,EAAM7E,IAAKC,IAAK4E,EAAM5E,iBAnC9B8G,IAAMtB,WA2Cd4C,6BAAiB,CAC9BC,OAAQ,2CADKD,CAEZP,GCigBGL,GA7iBahC,YAudKsB,IAAMtB,UAoFTsB,IAAMtB,qNAGzBiC,MAAQ,WACNjJ,OAAOkJ,KACL,mDACExB,EAAKR,MAAM3F,IACX,IACAmG,EAAKR,MAAM1F,IACX,mBACAkG,EAAKR,MAAMvC,OAIjByE,QAAU,WACR,OACE9D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBAAYkC,EAAKR,MAAMrC,MACvBS,EAAAC,EAAAC,cAAA,oBACSkC,EAAKR,MAAMpC,KAClBQ,EAAAC,EAAAC,cAAA,YAGFF,EAAAC,EAAAC,cAAA,UACEK,QAAS,WACP7F,OAAOkJ,KACL,mDACExB,EAAKR,MAAM3F,IACX,IACAmG,EAAKR,MAAM1F,IACX,mBACAkG,EAAKR,MAAMvC,MARnB,uFAmBJ,OACEW,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAAuB,KAAMqC,QAAN,cA1CoBd,IAAMtB,YC/iBlC8C,IAASC,OAAOzE,EAAAC,EAAAC,cAACwE,EAAD,MAAcC,SAASC,eAAe,SJ0HhD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3G,KAAK,SAAA4G,GACjCA,EAAaC","file":"static/js/main.f327e4d9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\r\nimport GoogleMap from \"google-map-react\";\r\n//import GoogleMap1 from \"google-maps-react\";\r\nimport \"./mainPage.css\";\r\n\r\nimport { thisExpression } from \"@babel/types\";\r\n\r\nclass mainPage extends Component {\r\n  state = {\r\n    distance: 15,\r\n    address: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    Supermarkets: false,\r\n    Schools: false,\r\n    Churches: false,\r\n    communityCenter: false,\r\n    Libraries: false,\r\n    Cafe: false,\r\n    danceStudio: false,\r\n    Gyms: false,\r\n    pool: false,\r\n    playgrounds: false,\r\n    Parks: false,\r\n    resaltState: false,\r\n    error: false,\r\n    center: {\r\n      lat: 39.2557,\r\n      lng: -76.711\r\n    },\r\n    zoom: 6,\r\n    places: [],\r\n    distancem: 15 * 1609.34\r\n  };\r\n\r\n  handleSupermarketsCheckboxChange = event =>\r\n    this.setState({ Supermarkets: event.target.checked });\r\n  handleSchoolsCheckboxChange = event =>\r\n    this.setState({ Schools: event.target.checked });\r\n  handleChurchesCheckboxChange = event =>\r\n    this.setState({ Churches: event.target.checked });\r\n  handleCommunityCheckboxChange = event =>\r\n    this.setState({ communityCenter: event.target.checked });\r\n  handleLibrariesCheckboxChange = event =>\r\n    this.setState({ Libraries: event.target.checked });\r\n  handleCafeCheckboxChange = event =>\r\n    this.setState({ Cafe: event.target.checked });\r\n  handleDanceCheckboxChange = event =>\r\n    this.setState({ danceStudio: event.target.checked });\r\n  handleGymsCheckboxChange = event =>\r\n    this.setState({ Gyms: event.target.checked });\r\n  handleSwimmingCheckboxChange = event =>\r\n    this.setState({ pool: event.target.checked });\r\n  handlePlaygroundsCheckboxChange = event =>\r\n    this.setState({ playgrounds: event.target.checked });\r\n  handleParksCheckboxChange = event =>\r\n    this.setState({ Parks: event.target.checked });\r\n\r\n  handleChangeAddress = e => {\r\n    this.setState({ address: e.target.value });\r\n  };\r\n  handleChangeState = e => {\r\n    this.setState({ state: e.target.value });\r\n  };\r\n  handleChangeStreet = e => {\r\n    this.setState({ street: e.target.value });\r\n  };\r\n  handleChangeCity = e => {\r\n    this.setState({ city: e.target.value });\r\n  };\r\n  handleDistanceChange = e => {\r\n    this.setState({ distance: e.target.value });\r\n  };\r\n\r\n  // function to be implamented\r\n  /**\r\n   * when button is pressed it will call the function errorCheck.\r\n   * error check will determin if there iis an error or not if there is an error this.state.error will be true. else false\r\n   * then based on the resalts will convert state to a JSON then\r\n   * send that info to the dack end.\r\n   *      this will be done through an ajax call react uses the fetch function as an ajax comand.\r\n   * once a respons is receved send that JSON object to the plot function.\r\n   */\r\n\r\n  buttonClick = () => {\r\n    //this.errorCheck();\r\n    var API_key = \"&key=AIzaSyDjxQG1nLTRjlCFbVB4mq_jMtu40GMR5D4\";\r\n    var lol;\r\n    var hold = this.state.distance * 1609.34;\r\n    var city = this.state.city.replace(/ /g, \"+\");\r\n    var address = this.state.address.replace(/ /g, \"+\");\r\n    this.setState({ distancem: hold });\r\n\r\n    this.setState({\r\n      places: []\r\n    });\r\n\r\n    fetch(\r\n      \"https://maps.googleapis.com/maps/api/geocode/json?address=\" +\r\n        address +\r\n        \",+\" +\r\n        city +\r\n        \",+\" +\r\n        this.state.state +\r\n        \"&key=AIzaSyB7pQd3kQPwZXm8n-vRT1YJ37x5ZGkLt0Y\"\r\n    )\r\n      .then(res => res.json())\r\n      .then(\r\n        result => {\r\n          if (result.status !== \"OK\") {\r\n            this.setState({ error: true });\r\n            return;\r\n          }\r\n\r\n          console.log(result);\r\n          this.setState({\r\n            center: {\r\n              lat: result.results[0].geometry.location.lat,\r\n              lng: result.results[0].geometry.location.lng\r\n            }\r\n          });\r\n        },\r\n        error => {\r\n          this.errorCheck();\r\n        }\r\n      );\r\n\r\n    if (this.state.Supermarkets === true) {\r\n      fetch(\r\n        \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=\" +\r\n          JSON.stringify(this.state.center.lat) +\r\n          \",\" +\r\n          JSON.stringify(this.state.center.lng) +\r\n          \"&radius=\" +\r\n          JSON.stringify(hold) +\r\n          \"&keyword=Supermarket\" +\r\n          API_key\r\n      )\r\n        .then(res => res.json())\r\n        .then(\r\n          result => {\r\n            for (var i = 0; i < result.results.length; i++) {\r\n              var add;\r\n              fetch(\r\n                \"https://maps.googleapis.com/maps/api/geocode/json?place_id=\" +\r\n                  result.results[i].place_id +\r\n                  \"&key=AIzaSyDjxQG1nLTRjlCFbVB4mq_jMtu40GMR5D4\"\r\n              )\r\n                .then(res => res.json())\r\n                .then((add = result.results[0].vicinity));\r\n              lol = {\r\n                id: result.results[i].place_id,\r\n                lat: result.results[i].geometry.location.lat,\r\n                lng: result.results[i].geometry.location.lng,\r\n                icon: result.results[i].icon,\r\n                name: result.results[i].name,\r\n                type: \"supermarket\",\r\n                address: add\r\n              };\r\n              this.setState({\r\n                places: [...this.state.places, lol]\r\n              });\r\n              //this.setState({ center: { lat: 0, lng: 0 } });\r\n              console.log(result);\r\n            }\r\n          },\r\n          error => {\r\n            this.setState({\r\n              hold: \"error\"\r\n            });\r\n          }\r\n        );\r\n    }\r\n    if (this.state.Schools === true) {\r\n      fetch(\r\n        \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=\" +\r\n          JSON.stringify(this.state.center.lat) +\r\n          \",\" +\r\n          JSON.stringify(this.state.center.lng) +\r\n          \"&radius=\" +\r\n          JSON.stringify(hold) +\r\n          \"&type=school\" +\r\n          API_key\r\n      )\r\n        .then(res => res.json())\r\n        .then(\r\n          result => {\r\n            for (var i = 0; i < result.results.length; i++) {\r\n              var add;\r\n              fetch(\r\n                \"https://maps.googleapis.com/maps/api/geocode/json?place_id=\" +\r\n                  result.results[i].place_id +\r\n                  \"&key=AIzaSyDjxQG1nLTRjlCFbVB4mq_jMtu40GMR5D4\"\r\n              )\r\n                .then(res => res.json())\r\n                .then((add = result.results[0].vicinity));\r\n              lol = {\r\n                id: result.results[i].place_id,\r\n                lat: result.results[i].geometry.location.lat,\r\n                lng: result.results[i].geometry.location.lng,\r\n                icon: result.results[i].icon,\r\n                name: result.results[i].name,\r\n                type: \"school\",\r\n                address: add\r\n              };\r\n              this.setState({\r\n                places: [...this.state.places, lol]\r\n              });\r\n              //this.setState({ center: { lat: 0, lng: 0 } });\r\n              console.log(lol);\r\n            }\r\n          },\r\n          error => {\r\n            this.setState({\r\n              hold: \"error\"\r\n            });\r\n          }\r\n        );\r\n    }\r\n    if (this.state.Churches === true) {\r\n      fetch(\r\n        \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=\" +\r\n          JSON.stringify(this.state.center.lat) +\r\n          \",\" +\r\n          JSON.stringify(this.state.center.lng) +\r\n          \"&radius=\" +\r\n          JSON.stringify(hold) +\r\n          \"&type=church\" +\r\n          API_key\r\n      )\r\n        .then(res => res.json())\r\n        .then(\r\n          result => {\r\n            for (var i = 0; i < result.results.length; i++) {\r\n              var add;\r\n              fetch(\r\n                \"https://maps.googleapis.com/maps/api/geocode/json?place_id=\" +\r\n                  result.results[i].place_id +\r\n                  \"&key=AIzaSyDjxQG1nLTRjlCFbVB4mq_jMtu40GMR5D4\"\r\n              )\r\n                .then(res => res.json())\r\n                .then((add = result.results[0].vicinity));\r\n              lol = {\r\n                id: result.results[i].place_id,\r\n                lat: result.results[i].geometry.location.lat,\r\n                lng: result.results[i].geometry.location.lng,\r\n                icon: result.results[i].icon,\r\n                name: result.results[i].name,\r\n                type: \"churches\",\r\n                address: add\r\n              };\r\n              this.setState({\r\n                places: [...this.state.places, lol]\r\n              });\r\n              //this.setState({ center: { lat: 0, lng: 0 } });\r\n              console.log(lol);\r\n            }\r\n          },\r\n          error => {\r\n            this.setState({\r\n              hold: \"error\"\r\n            });\r\n          }\r\n        );\r\n    }\r\n    if (this.state.communityCenter === true) {\r\n      fetch(\r\n        \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=\" +\r\n          JSON.stringify(this.state.center.lat) +\r\n          \",\" +\r\n          JSON.stringify(this.state.center.lng) +\r\n          \"&radius=\" +\r\n          JSON.stringify(hold) +\r\n          \"&keyword=community+center\" +\r\n          API_key\r\n      )\r\n        .then(res => res.json())\r\n        .then(\r\n          result => {\r\n            for (var i = 0; i < result.results.length; i++) {\r\n              var add;\r\n              fetch(\r\n                \"https://maps.googleapis.com/maps/api/geocode/json?place_id=\" +\r\n                  result.results[i].place_id +\r\n                  \"&key=AIzaSyDjxQG1nLTRjlCFbVB4mq_jMtu40GMR5D4\"\r\n              )\r\n                .then(res => res.json())\r\n                .then((add = result.results[0].vicinity));\r\n              lol = {\r\n                id: result.results[i].place_id,\r\n                lat: result.results[i].geometry.location.lat,\r\n                lng: result.results[i].geometry.location.lng,\r\n                icon: result.results[i].icon,\r\n                name: result.results[i].name,\r\n                type: \"community center\",\r\n                address: add\r\n              };\r\n              this.setState({\r\n                places: [...this.state.places, lol]\r\n              });\r\n              //this.setState({ center: { lat: 0, lng: 0 } });\r\n              console.log(lol);\r\n            }\r\n          },\r\n          error => {\r\n            this.setState({\r\n              hold: \"error\"\r\n            });\r\n          }\r\n        );\r\n    }\r\n    if (this.state.danceStudio === true) {\r\n      fetch(\r\n        \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=\" +\r\n          JSON.stringify(this.state.center.lat) +\r\n          \",\" +\r\n          JSON.stringify(this.state.center.lng) +\r\n          \"&radius=\" +\r\n          JSON.stringify(hold) +\r\n          \"&keyword=dance+studio\" +\r\n          API_key\r\n      )\r\n        .then(res => res.json())\r\n        .then(\r\n          result => {\r\n            for (var i = 0; i < result.results.length; i++) {\r\n              var add;\r\n              fetch(\r\n                \"https://maps.googleapis.com/maps/api/geocode/json?place_id=\" +\r\n                  result.results[i].place_id +\r\n                  \"&key=AIzaSyDjxQG1nLTRjlCFbVB4mq_jMtu40GMR5D4\"\r\n              )\r\n                .then(res => res.json())\r\n                .then((add = result.results[0].vicinity));\r\n              lol = {\r\n                id: result.results[i].place_id,\r\n                lat: result.results[i].geometry.location.lat,\r\n                lng: result.results[i].geometry.location.lng,\r\n                icon: result.results[i].icon,\r\n                name: result.results[i].name,\r\n                type: \"dance studio\",\r\n                address: add\r\n              };\r\n              this.setState({\r\n                places: [...this.state.places, lol]\r\n              });\r\n              //this.setState({ center: { lat: 0, lng: 0 } });\r\n              console.log(lol);\r\n            }\r\n          },\r\n          error => {\r\n            this.setState({\r\n              hold: \"error\"\r\n            });\r\n          }\r\n        );\r\n    }\r\n\r\n    if (this.state.Cafe === true) {\r\n      fetch(\r\n        \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=\" +\r\n          JSON.stringify(this.state.center.lat) +\r\n          \",\" +\r\n          JSON.stringify(this.state.center.lng) +\r\n          \"&radius=\" +\r\n          JSON.stringify(hold) +\r\n          \"&type=cafe\" +\r\n          API_key\r\n      )\r\n        .then(res => res.json())\r\n        .then(\r\n          result => {\r\n            for (var i = 0; i < result.results.length; i++) {\r\n              var add;\r\n              fetch(\r\n                \"https://maps.googleapis.com/maps/api/geocode/json?place_id=\" +\r\n                  result.results[i].place_id +\r\n                  \"&key=AIzaSyDjxQG1nLTRjlCFbVB4mq_jMtu40GMR5D4\"\r\n              )\r\n                .then(res => res.json())\r\n                .then((add = result.results[0].vicinity));\r\n              lol = {\r\n                id: result.results[i].place_id,\r\n                lat: result.results[i].geometry.location.lat,\r\n                lng: result.results[i].geometry.location.lng,\r\n                icon: result.results[i].icon,\r\n                name: result.results[i].name,\r\n                type: \"cafe\",\r\n                address: add\r\n              };\r\n              this.setState({\r\n                places: [...this.state.places, lol]\r\n              });\r\n              //this.setState({ center: { lat: 0, lng: 0 } });\r\n              console.log(lol);\r\n            }\r\n          },\r\n          error => {\r\n            this.setState({\r\n              hold: \"error\"\r\n            });\r\n          }\r\n        );\r\n    }\r\n\r\n    if (this.state.Libraries === true) {\r\n      fetch(\r\n        \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=\" +\r\n          JSON.stringify(this.state.center.lat) +\r\n          \",\" +\r\n          JSON.stringify(this.state.center.lng) +\r\n          \"&radius=\" +\r\n          JSON.stringify(hold) +\r\n          \"&type=library\" +\r\n          API_key\r\n      )\r\n        .then(res => res.json())\r\n        .then(\r\n          result => {\r\n            for (var i = 0; i < result.results.length; i++) {\r\n              var add;\r\n              fetch(\r\n                \"https://maps.googleapis.com/maps/api/geocode/json?place_id=\" +\r\n                  result.results[i].place_id +\r\n                  \"&key=AIzaSyDjxQG1nLTRjlCFbVB4mq_jMtu40GMR5D4\"\r\n              )\r\n                .then(res => res.json())\r\n                .then((add = result.results[0].vicinity));\r\n              lol = {\r\n                id: result.results[i].place_id,\r\n                lat: result.results[i].geometry.location.lat,\r\n                lng: result.results[i].geometry.location.lng,\r\n                icon: result.results[i].icon,\r\n                name: result.results[i].name,\r\n                type: \"library\",\r\n                address: add\r\n              };\r\n              this.setState({\r\n                places: [...this.state.places, lol]\r\n              });\r\n              //this.setState({ center: { lat: 0, lng: 0 } });\r\n              console.log(lol);\r\n            }\r\n          },\r\n          error => {\r\n            console.log(error);\r\n            this.setState({\r\n              hold: \"error\"\r\n            });\r\n          }\r\n        );\r\n    }\r\n\r\n    if (this.state.Gyms === true) {\r\n      fetch(\r\n        \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=\" +\r\n          JSON.stringify(this.state.center.lat) +\r\n          \",\" +\r\n          JSON.stringify(this.state.center.lng) +\r\n          \"&radius=\" +\r\n          JSON.stringify(hold) +\r\n          \"&type=gym\" +\r\n          API_key\r\n      )\r\n        .then(res => res.json())\r\n        .then(\r\n          result => {\r\n            for (var i = 0; i < result.results.length; i++) {\r\n              var add;\r\n              fetch(\r\n                \"https://maps.googleapis.com/maps/api/geocode/json?place_id=\" +\r\n                  result.results[i].place_id +\r\n                  \"&key=AIzaSyDjxQG1nLTRjlCFbVB4mq_jMtu40GMR5D4\"\r\n              )\r\n                .then(res => res.json())\r\n                .then((add = result.results[0].vicinity));\r\n              lol = {\r\n                id: result.results[i].place_id,\r\n                lat: result.results[i].geometry.location.lat,\r\n                lng: result.results[i].geometry.location.lng,\r\n                icon: result.results[i].icon,\r\n                name: result.results[i].name,\r\n                type: \"Gyms\",\r\n                address: add\r\n              };\r\n              this.setState({\r\n                places: [...this.state.places, lol]\r\n              });\r\n              //this.setState({ center: { lat: 0, lng: 0 } });\r\n              console.log(lol);\r\n            }\r\n          },\r\n          error => {\r\n            console.log(error);\r\n            this.setState({\r\n              hold: \"error\"\r\n            });\r\n          }\r\n        );\r\n    }\r\n\r\n    if (this.state.pool === true) {\r\n      fetch(\r\n        \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=\" +\r\n          JSON.stringify(this.state.center.lat) +\r\n          \",\" +\r\n          JSON.stringify(this.state.center.lng) +\r\n          \"&radius=\" +\r\n          JSON.stringify(hold) +\r\n          \"&keyword=pool\" +\r\n          API_key\r\n      )\r\n        .then(res => res.json())\r\n        .then(\r\n          result => {\r\n            for (var i = 0; i < result.results.length; i++) {\r\n              var add;\r\n              fetch(\r\n                \"https://maps.googleapis.com/maps/api/geocode/json?place_id=\" +\r\n                  result.results[i].place_id +\r\n                  \"&key=AIzaSyDjxQG1nLTRjlCFbVB4mq_jMtu40GMR5D4\"\r\n              )\r\n                .then(res => res.json())\r\n                .then((add = result.results[0].vicinity));\r\n              lol = {\r\n                id: result.results[i].place_id,\r\n                lat: result.results[i].geometry.location.lat,\r\n                lng: result.results[i].geometry.location.lng,\r\n                icon: result.results[i].icon,\r\n                name: result.results[i].name,\r\n                type: \"pool\",\r\n                address: add\r\n              };\r\n              this.setState({\r\n                places: [...this.state.places, lol]\r\n              });\r\n              //this.setState({ center: { lat: 0, lng: 0 } });\r\n              console.log(lol);\r\n            }\r\n          },\r\n          error => {\r\n            console.log(error);\r\n            this.setState({\r\n              hold: \"error\"\r\n            });\r\n          }\r\n        );\r\n    }\r\n\r\n    if (this.state.playgrounds === true) {\r\n      fetch(\r\n        \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=\" +\r\n          JSON.stringify(this.state.center.lat) +\r\n          \",\" +\r\n          JSON.stringify(this.state.center.lng) +\r\n          \"&radius=\" +\r\n          JSON.stringify(hold) +\r\n          \"&keyword=playground\" +\r\n          API_key\r\n      )\r\n        .then(res => res.json())\r\n        .then(\r\n          result => {\r\n            for (var i = 0; i < result.results.length; i++) {\r\n              var add;\r\n              fetch(\r\n                \"https://maps.googleapis.com/maps/api/geocode/json?place_id=\" +\r\n                  result.results[i].place_id +\r\n                  \"&key=AIzaSyDjxQG1nLTRjlCFbVB4mq_jMtu40GMR5D4\"\r\n              )\r\n                .then(res => res.json())\r\n                .then((add = result.results[0].vicinity));\r\n              lol = {\r\n                id: result.results[i].place_id,\r\n                lat: result.results[i].geometry.location.lat,\r\n                lng: result.results[i].geometry.location.lng,\r\n                icon: result.results[i].icon,\r\n                name: result.results[i].name,\r\n                type: \"playground\",\r\n                address: add\r\n              };\r\n              this.setState({\r\n                places: [...this.state.places, lol]\r\n              });\r\n              //this.setState({ center: { lat: 0, lng: 0 } });\r\n              console.log(lol);\r\n            }\r\n          },\r\n          error => {\r\n            console.log(error);\r\n            this.setState({\r\n              hold: \"error\"\r\n            });\r\n          }\r\n        );\r\n    }\r\n\r\n    if (this.state.Parks === true) {\r\n      fetch(\r\n        \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=\" +\r\n          JSON.stringify(this.state.center.lat) +\r\n          \",\" +\r\n          JSON.stringify(this.state.center.lng) +\r\n          \"&radius=\" +\r\n          JSON.stringify(hold) +\r\n          \"&type=park\" +\r\n          API_key\r\n      )\r\n        .then(res => res.json())\r\n        .then(\r\n          result => {\r\n            for (var i = 0; i < result.results.length; i++) {\r\n              var add;\r\n              fetch(\r\n                \"https://maps.googleapis.com/maps/api/geocode/json?place_id=\" +\r\n                  result.results[i].place_id +\r\n                  \"&key=AIzaSyDjxQG1nLTRjlCFbVB4mq_jMtu40GMR5D4\"\r\n              )\r\n                .then(res => res.json())\r\n                .then((add = result.results[0].vicinity));\r\n              lol = {\r\n                id: result.results[i].place_id,\r\n                lat: result.results[i].geometry.location.lat,\r\n                lng: result.results[i].geometry.location.lng,\r\n                icon: result.results[i].icon,\r\n                name: result.results[i].name,\r\n                type: \"park\",\r\n                address: add\r\n              };\r\n              this.setState({\r\n                places: [...this.state.places, lol]\r\n              });\r\n              //this.setState({ center: { lat: 0, lng: 0 } });\r\n              console.log(lol);\r\n            }\r\n          },\r\n          error => {\r\n            console.log(error);\r\n            this.setState({\r\n              hold: \"error\"\r\n            });\r\n          }\r\n        );\r\n    }\r\n\r\n    /*fetch(\"http://71.166.53.242/Circles447/build/GoogleMapsPort.py?state\")\r\n      .then(res => res.json())\r\n      .then(\r\n      (result) => {\r\n        \r\n      },\r\n      (error) => {\r\n      }\r\n      )*/\r\n\r\n    this.setState({ resaltState: true });\r\n\r\n    this.setState({\r\n      Supermarkets: false,\r\n      Schools: false,\r\n      Churches: false,\r\n      communityCenter: false,\r\n      Libraries: false,\r\n      Cafe: false,\r\n      danceStudio: false,\r\n      Gyms: false,\r\n      pool: false,\r\n      playgrounds: false,\r\n      Parks: false\r\n    });\r\n  };\r\n\r\n  errorCheck = () => {\r\n    if (this.state.address === \"\") {\r\n      this.setState({ error: true });\r\n    } else if (this.state.state === \"\" || this.state.state === \"select one\") {\r\n      this.setState({ error: true });\r\n    } else if (this.state.city === \"\") {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  errorButtonClick = () => {\r\n    this.setState({ error: false });\r\n    this.setState({ resaltState: false });\r\n  };\r\n\r\n  optionClick = () => {\r\n    if (this.state.resaltState === true) {\r\n      this.setState({ resaltState: false });\r\n    } else {\r\n      this.setState({ resaltState: true });\r\n    }\r\n  };\r\n\r\n  resultClick = () => {\r\n    if (this.state.resaltState === true) {\r\n      this.setState({ resaltState: true });\r\n    } else {\r\n      this.setState({ resaltState: true });\r\n    }\r\n  };\r\n\r\n  mapPoint = () => {\r\n    return (\r\n      <GMapReact\r\n        center={this.state.center}\r\n        Zoom={this.state.zoom}\r\n        places={this.state.places}\r\n        distance={this.state.distance}\r\n      />\r\n    );\r\n  };\r\n\r\n  Error = () => {\r\n    var hold1 = this.state.places;\r\n    return (\r\n      <div className=\"error\">\r\n        ERROR:<br></br>\r\n        Pleae make sure that all text areas are filed with valid addresses{\" \"}\r\n        <br></br>\r\n        {/*this.state.places[0].id*/}\r\n        <button onClick={this.errorButtonClick}>Okay</button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  Resalts = () => {\r\n    return (\r\n      <div className=\"option\">\r\n        <div className=\"menu\" onClick={() => this.optionClick({})}>\r\n          <view style={{ flex: 1 }}>\r\n            <text style={{ textAlign: \"right\" }}>\r\n              <font style={{ color: \"white\" }}>Options</font>\r\n            </text>\r\n          </view>\r\n          <br></br>\r\n        </div>\r\n        <div />\r\n        <div className=\"resalt\" onClick={() => this.resultClick({})}>\r\n          <div className=\"menu\">\r\n            <view style={{ flex: 1 }}>\r\n              <text style={{ textAlign: \"right\" }}>\r\n                <font style={{ color: \"white\" }}>Reslats</font>\r\n              </text>\r\n            </view>\r\n            <br></br>\r\n          </div>\r\n        </div>\r\n        <div className=\"hold4\" /** move this to be visible under resut title*/>\r\n          {this.state.places.map(place => {\r\n            return (\r\n              <ResultElement\r\n                className=\"p\"\r\n                name={place.name}\r\n                type={place.type}\r\n                address={place.address}\r\n                id={place.id}\r\n                lat={place.lat}\r\n                lng={place.lng}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  Options = () => {\r\n    var dis = this.state.distance;\r\n    var hold = this.state.Libraries;\r\n    return (\r\n      <div className=\"option\">\r\n        <div className=\"menu\" onClick={() => this.optionClick({})}>\r\n          <view style={{ flex: 1 }}>\r\n            <text style={{ textAlign: \"right\" }}>\r\n              <font style={{ color: \"white\" }}>Options</font>\r\n            </text>\r\n          </view>\r\n          <br></br>\r\n        </div>\r\n        enter address {hold}\r\n        <br></br>\r\n        address and street:\r\n        <input\r\n          type=\"text\"\r\n          name=\"fname\"\r\n          value={this.state.address}\r\n          onChange={this.handleChangeAddress}\r\n        ></input>\r\n        <br></br>\r\n        state:\r\n        <select value={this.state.state} onChange={this.handleChangeState}>\r\n          <option selected>select one</option>\r\n          <option value=\"AL\">Alabama</option>\r\n          <option value=\"AK\">Alaska</option>\r\n          <option value=\"AZ\">Arizona</option>\r\n          <option value=\"AR\">Arkansas</option>\r\n          <option value=\"CA\">California</option>\r\n          <option value=\"CO\">Colorado</option>\r\n          <option value=\"CT\">Connecticut</option>\r\n          <option value=\"DE\">Delaware</option>\r\n          <option value=\"DC\">District Of Columbia</option>\r\n          <option value=\"FL\">Florida</option>\r\n          <option value=\"GA\">Georgia</option>\r\n          <option value=\"HI\">Hawaii</option>\r\n          <option value=\"ID\">Idaho</option>\r\n          <option value=\"IL\">Illinois</option>\r\n          <option value=\"IN\">Indiana</option>\r\n          <option value=\"IA\">Iowa</option>\r\n          <option value=\"KS\">Kansas</option>\r\n          <option value=\"KY\">Kentucky</option>\r\n          <option value=\"LA\">Louisiana</option>\r\n          <option value=\"ME\">Maine</option>\r\n          <option value=\"MD\">Maryland</option>\r\n          <option value=\"MA\">Massachusetts</option>\r\n          <option value=\"MI\">Michigan</option>\r\n          <option value=\"MN\">Minnesota</option>\r\n          <option value=\"MS\">Mississippi</option>\r\n          <option value=\"MO\">Missouri</option>\r\n          <option value=\"MT\">Montana</option>\r\n          <option value=\"NE\">Nebraska</option>\r\n          <option value=\"NV\">Nevada</option>\r\n          <option value=\"NH\">New Hampshire</option>\r\n          <option value=\"NJ\">New Jersey</option>\r\n          <option value=\"NM\">New Mexico</option>\r\n          <option value=\"NY\">New York</option>\r\n          <option value=\"NC\">North Carolina</option>\r\n          <option value=\"ND\">North Dakota</option>\r\n          <option value=\"OH\">Ohio</option>\r\n          <option value=\"OK\">Oklahoma</option>\r\n          <option value=\"OR\">Oregon</option>\r\n          <option value=\"PA\">Pennsylvania</option>\r\n          <option value=\"RI\">Rhode Island</option>\r\n          <option value=\"SC\">South Carolina</option>\r\n          <option value=\"SD\">South Dakota</option>\r\n          <option value=\"TN\">Tennessee</option>\r\n          <option value=\"TX\">Texas</option>\r\n          <option value=\"UT\">Utah</option>\r\n          <option value=\"VT\">Vermont</option>\r\n          <option value=\"VA\">Virginia</option>\r\n          <option value=\"WA\">Washington</option>\r\n          <option value=\"WV\">West Virginia</option>\r\n          <option value=\"WI\">Wisconsin</option>\r\n          <option value=\"WY\">Wyoming</option>\r\n        </select>\r\n        city:\r\n        <input\r\n          type=\"text\"\r\n          name=\"fname\"\r\n          value={this.state.city}\r\n          onChange={this.handleChangeCity}\r\n        ></input>\r\n        <br></br>\r\n        <div class=\"slidecontainer\">\r\n          distance:\r\n          <input\r\n            type=\"range\"\r\n            min=\"1\"\r\n            max=\"50\"\r\n            value={this.state.distance}\r\n            onChange={this.handleDistanceChange}\r\n            class=\"slider\"\r\n            id=\"myRange\"\r\n          ></input>\r\n          <br></br>\r\n          The current distence is {dis} miles\r\n        </div>\r\n        options: <br></br>\r\n        <div>\r\n          <input\r\n            type=\"checkbox\"\r\n            style={this.checkboxStyle}\r\n            checked={this.state.checked}\r\n            onChange={this.handleSupermarketsCheckboxChange}\r\n          />\r\n          Supermarkets\r\n          <br></br>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={this.state.checked}\r\n            onChange={this.handleSchoolsCheckboxChange}\r\n          />\r\n          Schools\r\n          <br></br>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={this.state.checked}\r\n            onChange={this.handleChurchesCheckboxChange}\r\n          />\r\n          Churches\r\n          <br></br>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={this.state.checked}\r\n            onChange={this.handleCommunityCheckboxChange}\r\n          />\r\n          Community Buildings\r\n          <br></br>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={this.state.checked}\r\n            onChange={this.handleLibrariesCheckboxChange}\r\n          />\r\n          Libraries\r\n          <br></br>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={this.state.checked}\r\n            onChange={this.handleCafeCheckboxChange}\r\n          />\r\n          Cafe\r\n          <br></br>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={this.state.checked}\r\n            onChange={this.handleDanceCheckboxChange}\r\n          />\r\n          Dance schools\r\n          <br></br>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={this.state.checked}\r\n            onChange={this.handleGymsCheckboxChange}\r\n          />\r\n          Gyms\r\n          <br></br>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={this.state.checked}\r\n            onChange={this.handleSwimmingCheckboxChange}\r\n          />\r\n          Swimming pools\r\n          <br></br>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={this.state.checked}\r\n            onChange={this.handlePlaygroundsCheckboxChange}\r\n          />\r\n          Playgrounds\r\n          <br></br>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={this.state.checked}\r\n            onChange={this.handleParksCheckboxChange}\r\n          />\r\n          Parks\r\n          <br></br>\r\n        </div>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => this.buttonClick({})}\r\n            style={{\r\n              backgroundColor: \"MediumSeaGreen\"\r\n            }}\r\n          >\r\n            search\r\n          </button>\r\n          <div className=\"resalt\" onClick={() => this.resultClick({})}>\r\n            <div className=\"menu1\">\r\n              <view style={{ flex: 1 }}>\r\n                <text style={{ textAlign: \"right\" }}>\r\n                  <font style={{ color: \"white\" }}>Reslats</font>\r\n                </text>\r\n              </view>\r\n              <br></br>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"tittle\">\r\n          <font style={{ color: \"white\" }}>Parent School Research</font>\r\n        </div>\r\n        {this.state.error ? (\r\n          <this.Error />\r\n        ) : (\r\n          <body className=\"body\">\r\n            <div className=\"map\">\r\n              <this.mapPoint />\r\n            </div>\r\n            {this.state.resaltState ? <this.Resalts /> : <this.Options />}\r\n          </body>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default mainPage;\r\n\r\nconst GOOGLE_API_KEY = \"&key=AIzaSyDjxQG1nLTRjlCFbVB4mq_jMtu40GMR5D4\";\r\n\r\nclass GMapReact extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      center: {\r\n        lat: 0,\r\n        lng: 0\r\n      },\r\n      zoom: 17,\r\n      show: false,\r\n      distance: 0\r\n    };\r\n  }\r\n\r\n  someMethod() {\r\n    // Force a render without state change...\r\n    this.forceUpdate();\r\n  }\r\n\r\n  //onClick={()=> window.open(\"https://www.google.com/maps/search/?api=1&query=\"+lat+\",\"+lng=\",\"+id)}\r\n\r\n  render() {\r\n    const { center, Zoom, places } = this.props;\r\n\r\n    return (\r\n      <div style={{ width: \"100%\", height: \"100%\" }}>\r\n        <GoogleMap\r\n          bootstrapURLKeys={{ key: [GOOGLE_API_KEY] }}\r\n          center={center}\r\n          zoom={Zoom}\r\n          hoverDistance={60 / 2}\r\n          yesIWantToUseGoogleMapApiInternals={true}\r\n          //onChildClick={this._onChildClick}\r\n          /*onGoogleApiLoaded={({ map, maps }) =>\r\n            new maps.Circle({\r\n              strokeColor: \"#FF0000\",\r\n              strokeOpacity: 0.8,\r\n              strokeWeight: 2,\r\n              fillColor: \"#FF0000\",\r\n              fillOpacity: 0.3,\r\n              map,\r\n              center: center,\r\n              radius: this.props.distance * 1609.344\r\n            })\r\n          }*/\r\n        >\r\n          {/*<GoogleMap1.Circle\r\n            defaultCenter={{\r\n              lat: parseFloat(center.lat),\r\n              lng: parseFloat(center.lng)\r\n            }}\r\n            radius={3000}\r\n            options={{ strokeColor: \"#ff0000\" }}\r\n          />*/}\r\n\r\n          {places.map(place => {\r\n            return (\r\n              <Marker\r\n                text={place.id}\r\n                lat={place.lat}\r\n                lng={place.lng}\r\n                show={this.state.show}\r\n                info={place.name}\r\n                icon={place.icon}\r\n              />\r\n            );\r\n          })}\r\n        </GoogleMap>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Marker extends React.Component {\r\n  state = {\r\n    show: false,\r\n    show2: false\r\n  };\r\n\r\n  render() {\r\n    var show2 = false;\r\n    var style = {\r\n      borderRadius: 20,\r\n      height: 20,\r\n      width: 20\r\n    };\r\n\r\n    if (this.props.$hover === true) {\r\n      style = {\r\n        borderRadius: 20,\r\n        height: 20,\r\n        width: 20\r\n      };\r\n      show2 = true;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          style={style}\r\n          onClick={() => {\r\n            if (this.state.show === false) {\r\n              this.setState({ show: true });\r\n            } else {\r\n              this.setState({ show: false });\r\n            }\r\n          }}\r\n        >\r\n          {this.props.icon !== null ? (\r\n            <img\r\n              src={this.props.icon}\r\n              style={{ width: \"150%\", height: \"150%\" }}\r\n            ></img>\r\n          ) : (\r\n            <img\r\n              src={\"http://maps.google.com/mapfiles/ms/icons/blue.png\"}\r\n              style={{ width: \"150%\", height: \"150%\" }}\r\n            ></img>\r\n          )}\r\n        </div>\r\n        {/* Below is info window component */}\r\n        {this.state.show ? (\r\n          <Informationwindow\r\n            className=\"p1\"\r\n            info={this.props.info}\r\n            type={this.props.type}\r\n          ></Informationwindow>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {show2 ? (\r\n          <Informationwindow\r\n            className=\"p1\"\r\n            info={this.props.info}\r\n            type={this.props.type}\r\n          ></Informationwindow>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass Informationwindow extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.info}\r\n        <br></br>\r\n        {this.props.type}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass ResultElement extends React.Component {\r\n  click = () => {\r\n    window.open(\r\n      \"https://www.google.com/maps/search/?api=1&query=\" +\r\n        this.props.lat +\r\n        \",\" +\r\n        this.props.lng +\r\n        \"&query_place_id=\" +\r\n        this.props.id\r\n    );\r\n  };\r\n\r\n  element = () => {\r\n    return (\r\n      <div>\r\n        <div>name: {this.props.name}</div>\r\n        <div>\r\n          type: {this.props.type}\r\n          <br></br>\r\n          {/*aproximate address: {this.props.address}*/}\r\n        </div>\r\n        <button\r\n          onClick={() => {\r\n            window.open(\r\n              \"https://www.google.com/maps/search/?api=1&query=\" +\r\n                this.props.lat +\r\n                \",\" +\r\n                this.props.lng +\r\n                \"&query_place_id=\" +\r\n                this.props.id\r\n            );\r\n          }}\r\n        >\r\n          More Info\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"p\">\r\n        <this.element />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n//import GoogleMap from \"google-map-react\";\r\n//import GoogleMap from \"google-maps-react\";\r\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\r\nimport \"./mainPage.css\";\r\n\r\nimport { thisExpression } from \"@babel/types\";\r\n\r\nclass test_map extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      center: this.props.center,\r\n      zoom: this.props.zoom,\r\n      show: false,\r\n      distance: 0\r\n    };\r\n  }\r\n\r\n  //onClick={()=> window.open(\"https://www.google.com/maps/search/?api=1&query=\"+lat+\",\"+lng=\",\"+id)}\r\n\r\n  render() {\r\n    //const { center, Zoom, places } = this.props;\r\n\r\n    return (\r\n      <Map\r\n        google={this.props.google}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n        initialCenter={this.props.center}\r\n        zoom={this.props.zoom}\r\n        onClick={this.onMapClicked}\r\n      >\r\n        <Marker\r\n          title={\"The marker`s title will appear as a tooltip.\"}\r\n          name={\"SOMA\"}\r\n          position={this.props.center}\r\n        />\r\n\r\n        {this.props.places.map(place => {\r\n          return (\r\n            <Marker\r\n              title={\"The marker`s title will appear as a tooltip.\"}\r\n              name={\"SOMA\"}\r\n              position={{ lat: place.lat, lng: place.lng }}\r\n            />\r\n          );\r\n        })}\r\n      </Map>\r\n    );\r\n  }\r\n}\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyDjxQG1nLTRjlCFbVB4mq_jMtu40GMR5D4\"\r\n})(test_map);\r\n","import React, { Component } from \"react\";\r\n//import GoogleMap from \"google-map-react\";\r\n//import GoogleMap from \"google-maps-react\";\r\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\r\nimport \"./mainPage.css\";\r\nimport Test_map from \"./test_map\";\r\n\r\nimport { thisExpression } from \"@babel/types\";\r\n\r\nclass test extends Component {\r\n  state = {\r\n    distance: 15,\r\n    address: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    Supermarkets: false,\r\n    Schools: false,\r\n    Churches: false,\r\n    communityCenter: false,\r\n    Libraries: false,\r\n    Cafe: false,\r\n    danceStudio: false,\r\n    Gyms: false,\r\n    pool: false,\r\n    playgrounds: false,\r\n    Parks: false,\r\n    resaltState: false,\r\n    error: false,\r\n    center: {\r\n      lat: 39.2557,\r\n      lng: -76.711\r\n    },\r\n    zoom: 6,\r\n    places: []\r\n  };\r\n\r\n  handleSupermarketsCheckboxChange = event =>\r\n    this.setState({ Supermarkets: event.target.checked });\r\n  handleSchoolsCheckboxChange = event =>\r\n    this.setState({ Schools: event.target.checked });\r\n  handleChurchesCheckboxChange = event =>\r\n    this.setState({ Churches: event.target.checked });\r\n  handleCommunityCheckboxChange = event =>\r\n    this.setState({ communityCenter: event.target.checked });\r\n  handleLibrariesCheckboxChange = event =>\r\n    this.setState({ Libraries: event.target.checked });\r\n  handleCafeCheckboxChange = event =>\r\n    this.setState({ Cafe: event.target.checked });\r\n  handleDanceCheckboxChange = event =>\r\n    this.setState({ danceStudio: event.target.checked });\r\n  handleGymsCheckboxChange = event =>\r\n    this.setState({ Gyms: event.target.checked });\r\n  handleSwimmingCheckboxChange = event =>\r\n    this.setState({ pool: event.target.checked });\r\n  handlePlaygroundsCheckboxChange = event =>\r\n    this.setState({ playgrounds: event.target.checked });\r\n  handleParksCheckboxChange = event =>\r\n    this.setState({ Parks: event.target.checked });\r\n\r\n  handleChangeAddress = e => {\r\n    this.setState({ address: e.target.value });\r\n  };\r\n  handleChangeState = e => {\r\n    this.setState({ state: e.target.value });\r\n  };\r\n  handleChangeStreet = e => {\r\n    this.setState({ street: e.target.value });\r\n  };\r\n  handleChangeCity = e => {\r\n    this.setState({ city: e.target.value });\r\n  };\r\n  handleDistanceChange = e => {\r\n    this.setState({ distance: e.target.value });\r\n  };\r\n\r\n  // function to be implamented\r\n  /**\r\n   * when button is pressed it will call the function errorCheck.\r\n   * error check will determin if there iis an error or not if there is an error this.state.error will be true. else false\r\n   * then based on the resalts will convert state to a JSON then\r\n   * send that info to the dack end.\r\n   *      this will be done through an ajax call react uses the fetch function as an ajax comand.\r\n   * once a respons is receved send that JSON object to the plot function.\r\n   */\r\n\r\n  buttonClick = () => {\r\n    //this.errorCheck();\r\n    var API_key = \"&key=AIzaSyDjxQG1nLTRjlCFbVB4mq_jMtu40GMR5D4\";\r\n    var lol;\r\n    fetch(\r\n      \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=39.2557,-76.7110&radius=1500&type=restaurant&key=AIzaSyDjxQG1nLTRjlCFbVB4mq_jMtu40GMR5D4\"\r\n    )\r\n      .then(res => res.json())\r\n      .then(\r\n        result => {\r\n          for (var i = 0; i < result.results.length; i++) {\r\n            var add;\r\n            fetch(\r\n              \"https://maps.googleapis.com/maps/api/geocode/json?place_id=\" +\r\n                result.results[i].place_id +\r\n                \"&key=AIzaSyDjxQG1nLTRjlCFbVB4mq_jMtu40GMR5D4\"\r\n            )\r\n              .then(res => res.json())\r\n              .then((add = result.results[0].vicinity));\r\n            lol = {\r\n              id: result.results[i].place_id,\r\n              lat: result.results[i].geometry.location.lat,\r\n              lng: result.results[i].geometry.location.lng,\r\n              icon: result.results[i].icon,\r\n              name: result.results[i].name,\r\n              type: \"cafe\",\r\n              address: add\r\n            };\r\n            this.setState({\r\n              places: [...this.state.places, lol]\r\n            });\r\n            this.setState({ center: { lat: 0, lng: 0 } });\r\n            console.log(lol);\r\n            console.log(this.state.center);\r\n          }\r\n        },\r\n        error => {\r\n          this.setState({\r\n            hold: \"error\"\r\n          });\r\n        }\r\n      );\r\n\r\n    /*fetch(\"http://71.166.53.242/Circles447/build/GoogleMapsPort.py?state\")\r\n      .then(res => res.json())\r\n      .then(\r\n      (result) => {\r\n        \r\n      },\r\n      (error) => {\r\n      }\r\n      )*/\r\n\r\n    this.setState({ resaltState: true });\r\n  };\r\n\r\n  errorCheck = () => {\r\n    if (this.state.address === \"\") {\r\n      this.setState({ error: true });\r\n    } else if (this.state.state === \"\" || this.state.state === \"select one\") {\r\n      this.setState({ error: true });\r\n    } else if (this.state.city === \"\") {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  errorButtonClick = () => {\r\n    this.setState({ error: false });\r\n    this.setState({ resaltState: false });\r\n  };\r\n\r\n  optionClick = () => {\r\n    if (this.state.resaltState === true) {\r\n      this.setState({ resaltState: false });\r\n    } else {\r\n      this.setState({ resaltState: true });\r\n    }\r\n  };\r\n\r\n  resultClick = () => {\r\n    if (this.state.resaltState === true) {\r\n      this.setState({ resaltState: true });\r\n    } else {\r\n      this.setState({ resaltState: true });\r\n    }\r\n  };\r\n\r\n  mapPoint = () => {\r\n    /*return (\r\n      <Map\r\n        google={this.props.google}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n        initialCenter={{\r\n          lat: 40.854885,\r\n          lng: -88.081807\r\n        }}\r\n        zoom={15}\r\n        onClick={this.onMapClicked}\r\n      ></Map>\r\n    );*/\r\n\r\n    return (\r\n      <Test_map\r\n        center={this.state.center}\r\n        Zoom={this.state.zoom}\r\n        places={this.state.places}\r\n        distance={this.state.distance}\r\n      />\r\n    );\r\n  };\r\n\r\n  Error = () => {\r\n    var hold1 = this.state.places;\r\n    return (\r\n      <div className=\"error\">\r\n        ERROR:<br></br>\r\n        Pleae make sure that all text areas are filed <br></br>\r\n        {/*this.state.places[0].id*/}\r\n        <button onClick={this.errorButtonClick}>Okay</button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  Resalts = () => {\r\n    return (\r\n      <div className=\"option\">\r\n        <div className=\"menu\" onClick={() => this.optionClick({})}>\r\n          <view style={{ flex: 1 }}>\r\n            <text style={{ textAlign: \"right\" }}>\r\n              <font style={{ color: \"white\" }}>Options</font>\r\n            </text>\r\n          </view>\r\n          <br></br>\r\n        </div>\r\n        <div />\r\n        <div className=\"resalt\" onClick={() => this.resultClick({})}>\r\n          <div className=\"menu\">\r\n            <view style={{ flex: 1 }}>\r\n              <text style={{ textAlign: \"right\" }}>\r\n                <font style={{ color: \"white\" }}>Reslats</font>\r\n              </text>\r\n            </view>\r\n            <br></br>\r\n          </div>\r\n        </div>\r\n        <div className=\"hold4\" /** move this to be visible under resut title*/>\r\n          {this.state.places.map(place => {\r\n            return (\r\n              <ResultElement\r\n                name={place.name}\r\n                type={place.type}\r\n                address={place.address}\r\n                id={place.id}\r\n                lat={place.lat}\r\n                lng={place.lng}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  Options = () => {\r\n    var dis = this.state.distance;\r\n    return (\r\n      <div className=\"option\">\r\n        <div className=\"menu\" onClick={() => this.optionClick({})}>\r\n          <view style={{ flex: 1 }}>\r\n            <text style={{ textAlign: \"right\" }}>\r\n              <font style={{ color: \"white\" }}>Options</font>\r\n            </text>\r\n          </view>\r\n          <br></br>\r\n        </div>\r\n        enter address\r\n        <br></br>\r\n        address and street:\r\n        <input\r\n          type=\"text\"\r\n          name=\"fname\"\r\n          value={this.state.address}\r\n          onChange={this.handleChangeAddress}\r\n        ></input>\r\n        <br></br>\r\n        state:\r\n        <select value={this.state.state} onChange={this.handleChangeState}>\r\n          <option selected>select one</option>\r\n          <option value=\"AL\">Alabama</option>\r\n          <option value=\"AK\">Alaska</option>\r\n          <option value=\"AZ\">Arizona</option>\r\n          <option value=\"AR\">Arkansas</option>\r\n          <option value=\"CA\">California</option>\r\n          <option value=\"CO\">Colorado</option>\r\n          <option value=\"CT\">Connecticut</option>\r\n          <option value=\"DE\">Delaware</option>\r\n          <option value=\"DC\">District Of Columbia</option>\r\n          <option value=\"FL\">Florida</option>\r\n          <option value=\"GA\">Georgia</option>\r\n          <option value=\"HI\">Hawaii</option>\r\n          <option value=\"ID\">Idaho</option>\r\n          <option value=\"IL\">Illinois</option>\r\n          <option value=\"IN\">Indiana</option>\r\n          <option value=\"IA\">Iowa</option>\r\n          <option value=\"KS\">Kansas</option>\r\n          <option value=\"KY\">Kentucky</option>\r\n          <option value=\"LA\">Louisiana</option>\r\n          <option value=\"ME\">Maine</option>\r\n          <option value=\"MD\">Maryland</option>\r\n          <option value=\"MA\">Massachusetts</option>\r\n          <option value=\"MI\">Michigan</option>\r\n          <option value=\"MN\">Minnesota</option>\r\n          <option value=\"MS\">Mississippi</option>\r\n          <option value=\"MO\">Missouri</option>\r\n          <option value=\"MT\">Montana</option>\r\n          <option value=\"NE\">Nebraska</option>\r\n          <option value=\"NV\">Nevada</option>\r\n          <option value=\"NH\">New Hampshire</option>\r\n          <option value=\"NJ\">New Jersey</option>\r\n          <option value=\"NM\">New Mexico</option>\r\n          <option value=\"NY\">New York</option>\r\n          <option value=\"NC\">North Carolina</option>\r\n          <option value=\"ND\">North Dakota</option>\r\n          <option value=\"OH\">Ohio</option>\r\n          <option value=\"OK\">Oklahoma</option>\r\n          <option value=\"OR\">Oregon</option>\r\n          <option value=\"PA\">Pennsylvania</option>\r\n          <option value=\"RI\">Rhode Island</option>\r\n          <option value=\"SC\">South Carolina</option>\r\n          <option value=\"SD\">South Dakota</option>\r\n          <option value=\"TN\">Tennessee</option>\r\n          <option value=\"TX\">Texas</option>\r\n          <option value=\"UT\">Utah</option>\r\n          <option value=\"VT\">Vermont</option>\r\n          <option value=\"VA\">Virginia</option>\r\n          <option value=\"WA\">Washington</option>\r\n          <option value=\"WV\">West Virginia</option>\r\n          <option value=\"WI\">Wisconsin</option>\r\n          <option value=\"WY\">Wyoming</option>\r\n        </select>\r\n        city:\r\n        <input\r\n          type=\"text\"\r\n          name=\"fname\"\r\n          value={this.state.city}\r\n          onChange={this.handleChangeCity}\r\n        ></input>\r\n        <br></br>\r\n        <div class=\"slidecontainer\">\r\n          distance:\r\n          <input\r\n            type=\"range\"\r\n            min=\"1\"\r\n            max=\"50\"\r\n            value={this.state.distance}\r\n            onChange={this.handleDistanceChange}\r\n            class=\"slider\"\r\n            id=\"myRange\"\r\n          ></input>\r\n          <br></br>\r\n          The current distence is {dis} miles\r\n        </div>\r\n        options: <br></br>\r\n        <div>\r\n          <input\r\n            type=\"checkbox\"\r\n            style={this.checkboxStyle}\r\n            checked={this.state.checked}\r\n            onChange={this.handleCheckboxChange}\r\n          />\r\n          Supermarkets\r\n          <br></br>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={this.state.checked}\r\n            onChange={this.handleCheckboxChange}\r\n          />\r\n          Schools\r\n          <br></br>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={this.state.checked}\r\n            onChange={this.handleCheckboxChange}\r\n          />\r\n          Churches\r\n          <br></br>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={this.state.checked}\r\n            onChange={this.handleCheckboxChange}\r\n          />\r\n          Community Buildings\r\n          <br></br>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={this.state.checked}\r\n            onChange={this.handleCheckboxChange}\r\n          />\r\n          Libraries\r\n          <br></br>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={this.state.checked}\r\n            onChange={this.handleCheckboxChange}\r\n          />\r\n          Cafe\r\n          <br></br>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={this.state.checked}\r\n            onChange={this.handleCheckboxChange}\r\n          />\r\n          Dance schools\r\n          <br></br>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={this.state.checked}\r\n            onChange={this.handleCheckboxChange}\r\n          />\r\n          Gyms\r\n          <br></br>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={this.state.checked}\r\n            onChange={this.handleCheckboxChange}\r\n          />\r\n          Swimming pools\r\n          <br></br>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={this.state.checked}\r\n            onChange={this.handleCheckboxChange}\r\n          />\r\n          Playgrounds\r\n          <br></br>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={this.state.checked}\r\n            onChange={this.handleParksCheckboxChange}\r\n          />\r\n          Parks\r\n          <br></br>\r\n        </div>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => this.buttonClick({})}\r\n            style={{\r\n              backgroundColor: \"MediumSeaGreen\"\r\n            }}\r\n          >\r\n            search\r\n          </button>\r\n          <div className=\"resalt\" onClick={() => this.resultClick({})}>\r\n            <div className=\"menu1\">\r\n              <view style={{ flex: 1 }}>\r\n                <text style={{ textAlign: \"right\" }}>\r\n                  <font style={{ color: \"white\" }}>Reslats</font>\r\n                </text>\r\n              </view>\r\n              <br></br>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"tittle\">\r\n          <font style={{ color: \"white\" }}>NAME OF WEBPAGE</font>\r\n        </div>\r\n        {this.state.error ? (\r\n          <this.Error />\r\n        ) : (\r\n          <body className=\"body\">\r\n            <div className=\"map\">\r\n              <this.mapPoint />\r\n            </div>\r\n            {this.state.resaltState ? <this.Resalts /> : <this.Options />}\r\n          </body>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default test;\r\n/*export default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyDjxQG1nLTRjlCFbVB4mq_jMtu40GMR5D4\"\r\n})(test);*/\r\n\r\nconst GOOGLE_API_KEY = \"&key=AIzaSyDjxQG1nLTRjlCFbVB4mq_jMtu40GMR5D4\";\r\n\r\nclass GMapReact extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      center: {\r\n        lat: 0,\r\n        lng: 0\r\n      },\r\n      zoom: 17,\r\n      show: false,\r\n      distance: 0\r\n    };\r\n  }\r\n\r\n  someMethod() {\r\n    // Force a render without state change...\r\n    this.forceUpdate();\r\n  }\r\n\r\n  //onClick={()=> window.open(\"https://www.google.com/maps/search/?api=1&query=\"+lat+\",\"+lng=\",\"+id)}\r\n\r\n  render() {\r\n    const { center, Zoom, places } = this.props;\r\n\r\n    return (\r\n      <Map\r\n        google={this.props.google}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n        initialCenter={{\r\n          lat: 40.854885,\r\n          lng: -88.081807\r\n        }}\r\n        zoom={15}\r\n        onClick={this.onMapClicked}\r\n      ></Map>\r\n    );\r\n  }\r\n}\r\n\r\n/*export default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyDjxQG1nLTRjlCFbVB4mq_jMtu40GMR5D4\"\r\n})(GMapReact);*/\r\n/*class Marker extends React.Component {\r\n  state = {\r\n    show: false\r\n  };\r\n\r\n  render() {\r\n    var style = {\r\n      border: \"5px solid white\",\r\n      borderRadius: 20,\r\n      height: 20,\r\n      width: 20\r\n    };\r\n    if (this.props.$hover === true) {\r\n      style = {\r\n        border: \"5px solid red\",\r\n        borderRadius: 20,\r\n        height: 20,\r\n        width: 20\r\n      };\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          style={style}\r\n          onClick={() => {\r\n            if (this.state.show === false) {\r\n              this.setState({ show: true });\r\n            } else {\r\n              this.setState({ show: false });\r\n            }\r\n          }}\r\n        >\r\n          <img src={this.props.icon}></img>\r\n        </div>\r\n        {/* Below is info window component }\r\n        {this.state.show ? <div>{this.props.info}</div> : <div></div>}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}*/\r\n\r\nclass Circle extends React.Component {}\r\n\r\nclass ResultElement extends React.Component {\r\n  click = () => {\r\n    window.open(\r\n      \"https://www.google.com/maps/search/?api=1&query=\" +\r\n        this.props.lat +\r\n        \",\" +\r\n        this.props.lng +\r\n        \"&query_place_id=\" +\r\n        this.props.id\r\n    );\r\n  };\r\n\r\n  element = () => {\r\n    return (\r\n      <div>\r\n        <div>name: {this.props.name}</div>\r\n        <div>\r\n          type: {this.props.type}\r\n          <br></br>\r\n          {/*aproximate address: {this.props.address}*/}\r\n        </div>\r\n        <button\r\n          onClick={() => {\r\n            window.open(\r\n              \"https://www.google.com/maps/search/?api=1&query=\" +\r\n                this.props.lat +\r\n                \",\" +\r\n                this.props.lng +\r\n                \"&query_place_id=\" +\r\n                this.props.id\r\n            );\r\n          }}\r\n        >\r\n          More Info\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <this.element />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Mainpage from \"./components/mainPage\";\nimport Test from \"./components/test\";\n\nReactDOM.render(<Mainpage />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}