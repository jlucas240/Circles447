{"version":3,"sources":["serviceWorker.js","components/mainPage.jsx","index.js"],"names":["Boolean","window","location","hostname","match","mainPage","state","distance","Supermarkets","schools","churches","Community","Libraries","cafe","Dance","Gyms","Swimming","Playgrounds","Parks","resaltState","handleSupermarketsCheckboxChange","event","_this","setState","target","checked","handleSchoolsCheckboxChange","handleChurchesCheckboxChange","handleCommunityCheckboxChange","handleLibrariesCheckboxChange","handleCafeCheckboxChange","handleDanceCheckboxChange","handleGymsCheckboxChange","handleSwimmingCheckboxChange","handlePlaygroundsCheckboxChange","handleParksCheckboxChange","buttonClick","optionClick","_this2","this","react_default","a","createElement","className","style","color","dist","google","props","zoom","map","initialCenter","lat","lng","name","flex","textAlign","onClick","action","type","selected","value","min","max","height","verticalAlign","checkboxStyle","onChange","handleCheckboxChange","backgroundColor","Component","GoogleApiWrapper","apiKey","ReactDOM","render","src_components_mainPage","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b91c886f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\r\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\r\nimport \"./mainPage.css\";\r\n\r\nclass mainPage extends Component {\r\n  state = {\r\n    distance: 0,\r\n    Supermarkets: false,\r\n    schools: false,\r\n    churches: false,\r\n    Community: false,\r\n    Libraries: false,\r\n    cafe: false,\r\n    Dance: false,\r\n    Gyms: false,\r\n    Swimming: false,\r\n    Playgrounds: false,\r\n    Parks: false,\r\n    resaltState: false\r\n  };\r\n\r\n  handleSupermarketsCheckboxChange = event =>\r\n    this.setState({ Supermarkets: event.target.checked });\r\n  handleSchoolsCheckboxChange = event =>\r\n    this.setState({ checked: event.target.checked });\r\n  handleChurchesCheckboxChange = event =>\r\n    this.setState({ checked: event.target.checked });\r\n  handleCommunityCheckboxChange = event =>\r\n    this.setState({ checked: event.target.checked });\r\n  handleLibrariesCheckboxChange = event =>\r\n    this.setState({ checked: event.target.checked });\r\n  handleCafeCheckboxChange = event =>\r\n    this.setState({ checked: event.target.checked });\r\n  handleDanceCheckboxChange = event =>\r\n    this.setState({ checked: event.target.checked });\r\n  handleGymsCheckboxChange = event =>\r\n    this.setState({ checked: event.target.checked });\r\n  handleSwimmingCheckboxChange = event =>\r\n    this.setState({ checked: event.target.checked });\r\n  handlePlaygroundsCheckboxChange = event =>\r\n    this.setState({ checked: event.target.checked });\r\n  handleParksCheckboxChange = event =>\r\n    this.setState({ checked: event.target.checked });\r\n\r\n  // function to be implamented\r\n  /**\r\n   * when button is pressed it will call the function error catch\r\n   * then based on the resalts will convert state to a JSON then\r\n   * send that info to the dack end.\r\n   * once a respons ie receved send that JSON object to\r\n   * the plot function.\r\n   */\r\n\r\n  buttonClick = () => {\r\n    this.setState({ resaltState: false });\r\n  };\r\n\r\n  optionClick = () => {\r\n    if (this.state.resaltState === true) {\r\n      this.setState({ resaltState: false });\r\n    } else {\r\n      this.setState({ resaltState: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"tittle\">\r\n          <font style={{ color: \"white\" }}>NAME OF WEBPAGE</font>\r\n        </div>\r\n        <body className=\"body\">\r\n          <div className=\"map\">\r\n            <Map\r\n              google={this.props.google}\r\n              zoom={8}\r\n              style={this.state.map}\r\n              initialCenter={{ lat: 47.444, lng: -122.176 }}\r\n            >\r\n              <Marker name={\"Current location\"} />\r\n            </Map>\r\n          </div>\r\n          <div className=\"resalt\">\r\n            <div className=\"menu\">\r\n              <view style={{ flex: 1 }}>\r\n                <text style={{ textAlign: \"right\" }}>\r\n                  <font style={{ color: \"white\" }}>Reslats</font>\r\n                </text>\r\n              </view>\r\n              <br></br>\r\n            </div>\r\n          </div>\r\n          <div className=\"option\">\r\n            <div className=\"menu\" onClick={() => this.optionClick({})}>\r\n              <view style={{ flex: 1 }}>\r\n                <text style={{ textAlign: \"right\" }}>\r\n                  <font style={{ color: \"white\" }}>MENU</font>\r\n                </text>\r\n              </view>\r\n              <br></br>\r\n            </div>\r\n            enter address or zip\r\n            <form action=\"/action_page.php\">\r\n              address and streat:\r\n              <input type=\"text\" name=\"fname\"></input>\r\n              <br></br>\r\n            </form>\r\n            state:\r\n            <select>\r\n              <option selected value=\"grapefruit\">\r\n                select one\r\n              </option>\r\n              <option value=\"AL\">Alabama</option>\r\n              <option value=\"AK\">Alaska</option>\r\n              <option value=\"AZ\">Arizona</option>\r\n              <option value=\"AR\">Arkansas</option>\r\n              <option value=\"CA\">California</option>\r\n              <option value=\"CO\">Colorado</option>\r\n              <option value=\"CT\">Connecticut</option>\r\n              <option value=\"DE\">Delaware</option>\r\n              <option value=\"DC\">District Of Columbia</option>\r\n              <option value=\"FL\">Florida</option>\r\n              <option value=\"GA\">Georgia</option>\r\n              <option value=\"HI\">Hawaii</option>\r\n              <option value=\"ID\">Idaho</option>\r\n              <option value=\"IL\">Illinois</option>\r\n              <option value=\"IN\">Indiana</option>\r\n              <option value=\"IA\">Iowa</option>\r\n              <option value=\"KS\">Kansas</option>\r\n              <option value=\"KY\">Kentucky</option>\r\n              <option value=\"LA\">Louisiana</option>\r\n              <option value=\"ME\">Maine</option>\r\n              <option value=\"MD\">Maryland</option>\r\n              <option value=\"MA\">Massachusetts</option>\r\n              <option value=\"MI\">Michigan</option>\r\n              <option value=\"MN\">Minnesota</option>\r\n              <option value=\"MS\">Mississippi</option>\r\n              <option value=\"MO\">Missouri</option>\r\n              <option value=\"MT\">Montana</option>\r\n              <option value=\"NE\">Nebraska</option>\r\n              <option value=\"NV\">Nevada</option>\r\n              <option value=\"NH\">New Hampshire</option>\r\n              <option value=\"NJ\">New Jersey</option>\r\n              <option value=\"NM\">New Mexico</option>\r\n              <option value=\"NY\">New York</option>\r\n              <option value=\"NC\">North Carolina</option>\r\n              <option value=\"ND\">North Dakota</option>\r\n              <option value=\"OH\">Ohio</option>\r\n              <option value=\"OK\">Oklahoma</option>\r\n              <option value=\"OR\">Oregon</option>\r\n              <option value=\"PA\">Pennsylvania</option>\r\n              <option value=\"RI\">Rhode Island</option>\r\n              <option value=\"SC\">South Carolina</option>\r\n              <option value=\"SD\">South Dakota</option>\r\n              <option value=\"TN\">Tennessee</option>\r\n              <option value=\"TX\">Texas</option>\r\n              <option value=\"UT\">Utah</option>\r\n              <option value=\"VT\">Vermont</option>\r\n              <option value=\"VA\">Virginia</option>\r\n              <option value=\"WA\">Washington</option>\r\n              <option value=\"WV\">West Virginia</option>\r\n              <option value=\"WI\">Wisconsin</option>\r\n              <option value=\"WY\">Wyoming</option>\r\n            </select>\r\n            city:\r\n            <input type=\"text\" name=\"fname\"></input>\r\n            <br></br>\r\n            zipcode:\r\n            <input type=\"text\" name=\"fname\"></input>\r\n            <br></br>\r\n            <div>\r\n              distance:\r\n              <input\r\n                type=\"range\"\r\n                min=\"1\"\r\n                max=\"25\"\r\n                style={{ height: \"25px\", verticalAlign: \"middle\" }}\r\n              ></input>\r\n            </div>\r\n            options: <br></br>\r\n            <div>\r\n              <input\r\n                type=\"checkbox\"\r\n                style={this.checkboxStyle}\r\n                checked={this.state.checked}\r\n                onChange={this.handleCheckboxChange}\r\n              />\r\n              Supermarkets\r\n              <br></br>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={this.state.checked}\r\n                onChange={this.handleCheckboxChange}\r\n              />\r\n              Schools\r\n              <br></br>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={this.state.checked}\r\n                onChange={this.handleCheckboxChange}\r\n              />\r\n              Churches\r\n              <br></br>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={this.state.checked}\r\n                onChange={this.handleCheckboxChange}\r\n              />\r\n              Community Buildings\r\n              <br></br>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={this.state.checked}\r\n                onChange={this.handleCheckboxChange}\r\n              />\r\n              Libraries\r\n              <br></br>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={this.state.checked}\r\n                onChange={this.handleCheckboxChange}\r\n              />\r\n              Cafe\r\n              <br></br>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={this.state.checked}\r\n                onChange={this.handleCheckboxChange}\r\n              />\r\n              Dance schools\r\n              <br></br>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={this.state.checked}\r\n                onChange={this.handleCheckboxChange}\r\n              />\r\n              Gyms\r\n              <br></br>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={this.state.checked}\r\n                onChange={this.handleCheckboxChange}\r\n              />\r\n              Swimming pools\r\n              <br></br>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={this.state.checked}\r\n                onChange={this.handleCheckboxChange}\r\n              />\r\n              Playgrounds\r\n              <br></br>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={this.state.checked}\r\n                onChange={this.handleParksCheckboxChange}\r\n              />\r\n              Parks\r\n              <br></br>\r\n            </div>\r\n            <div>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => this.buttonClick({})}\r\n                style={{\r\n                  backgroundColor: \"MediumSeaGreen\"\r\n                }}\r\n              >\r\n                search\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </body>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyDjxQG1nLTRjlCFbVB4mq_jMtu40GMR5D4\"\r\n})(mainPage);\r\n//export default Test69M;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Mainpage from \"./components/mainPage\";\n\nReactDOM.render(<Mainpage />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}